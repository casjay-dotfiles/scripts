#!/usr/bin/env bash
# shellcheck shell=bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version           :  202208042152-git
# @@Author           :  Jason Hempstead
# @@Contact          :  jason@casjaysdev.pro
# @@License          :  WTFPL
# @@ReadME           :  changeip --help
# @@Copyright        :  Copyright: (c) 2022 Jason Hempstead, Casjays Developments
# @@Created          :  Thursday, Aug 04, 2022 21:52 EDT
# @@File             :  changeip
# @@Description      :  change ip script
# @@Changelog        :  New script
# @@TODO             :  Better documentation
# @@Other            :
# @@Resource         :
# @@Terminal App     :  no
# @@sudo/root        :  yes
# @@Template         :  bash/system
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# shellcheck disable=SC1003,SC2016,SC2031,SC2120,SC2155,SC2199,SC2317
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
APPNAME="$(basename -- "$0" 2>/dev/null)"
VERSION="202208042152-git"
USER="${SUDO_USER:-$USER}"
RUN_USER="${RUN_USER:-$USER}"
USER_HOME="${USER_HOME:-$HOME}"
SCRIPT_SRC_DIR="${BASH_SOURCE%/*}"
CHANGEIP_REQUIRE_SUDO="${CHANGEIP_REQUIRE_SUDO:-yes}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Reopen in a terminal
#if [ ! -t 0 ] && { [ "$1" = --term ] || [ $# = 0 ]; }; then { [ "$1" = --term ] && shift 1 || true; } && TERMINAL_APP="TRUE" myterminal -e "$APPNAME $*" && exit || exit 1; fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Set script title
#CASJAYS_DEV_TILE_FORMAT="${USER}@${HOSTNAME}:${PWD//$HOME/\~} - $APPNAME"
#CASJAYSDEV_TITLE_PREV="${CASJAYSDEV_TITLE_PREV:-${CASJAYSDEV_TITLE_SET:-$APPNAME}}"
#[ -z "$CASJAYSDEV_TITLE_SET" ] && printf '\033]2â”‚;%s\033\\' "$CASJAYS_DEV_TILE_FORMAT" && CASJAYSDEV_TITLE_SET="$APPNAME"
export CASJAYSDEV_TITLE_PREV="${CASJAYSDEV_TITLE_PREV:-${CASJAYSDEV_TITLE_SET:-$APPNAME}}" CASJAYSDEV_TITLE_SET
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Initial debugging
[ "$1" = "--debug" ] && set -x && export SCRIPT_OPTS="--debug" && export _DEBUG="on"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Disables colorization
[ "$1" = "--raw" ] && export SHOW_RAW="true"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# pipes fail
set -o pipefail
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/main/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
else
  echo "Can not load the functions file: $SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" 1>&2
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Options are: *_install
# system user desktopmgr devenvmgr dfmgr dockermgr fontmgr iconmgr pkmgr systemmgr thememgr wallpapermgr
user_install && __options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Send all output to /dev/null
__devnull() {
  tee &>/dev/null && exitCode=0 || exitCode=1
  return ${exitCode:-0}
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -'
# Send errors to /dev/null
__devnull2() {
  [ -n "$1" ] && local cmd="$1" && shift 1 || return 1
  eval $cmd "$*" 2>/dev/null && exitCode=0 || exitCode=1
  return ${exitCode:-0}
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -'
# See if the executable exists
__cmd_exists() {
  exitCode=0
  [ -n "$1" ] && local exitCode="" || return 0
  for cmd in "$@"; do
    builtin command -v "$cmd" &>/dev/null && exitCode+=$(($exitCode + 0)) || exitCode+=$(($exitCode + 1))
  done
  [ $exitCode -eq 0 ] || exitCode=3
  return ${exitCode:-0}
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Check for a valid internet connection
__am_i_online() {
  local exitCode=0
  curl -q -LSsfI --max-time 2 --retry 1 "${1:-https://1.1.1.1}" 2>&1 | grep -qi 'server:.*cloudflare' || exitCode=4
  return ${exitCode:-0}
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# colorization
if [ "$SHOW_RAW" = "true" ]; then
  printf_color() { printf '%b' "$1" | tr -d '\t' | $CHANGEIP_SED '/^%b$/d;s,\x1B\[ 0-9;]*[a-zA-Z],,g'; }
else
  printf_color() { printf "%b" "$(tput setaf "${2:-7}" 2>/dev/null)" "$1" "$(tput sgr0 2>/dev/null)"; }
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Additional printf_ colors
__printf_head() { printf_blue "$1"; }
__printf_opts() { printf_purple "$1"; }
__printf_line() { printf_cyan "$1"; }
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# output version
__version() { printf_cyan "$VERSION"; }
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# list options
__list_options() {
  printf_color "$1: " "$5"
  echo -ne "$2" | $CHANGEIP_SED 's|:||g;s/'$3'/ '$4'/g'
  printf_newline
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# create the config file
__gen_config() {
  local NOTIFY_CLIENT_NAME="$APPNAME"
  if [ "$INIT_CONFIG" != "TRUE" ]; then
    printf_blue "Generating the config file in"
    printf_cyan "$CHANGEIP_CONFIG_DIR/$CHANGEIP_CONFIG_FILE"
  fi
  [ -d "$CHANGEIP_CONFIG_DIR" ] || mkdir -p "$CHANGEIP_CONFIG_DIR"
  [ -d "$CHANGEIP_CONFIG_BACKUP_DIR" ] || mkdir -p "$CHANGEIP_CONFIG_BACKUP_DIR"
  [ -f "$CHANGEIP_CONFIG_DIR/$CHANGEIP_CONFIG_FILE" ] &&
    cp -Rf "$CHANGEIP_CONFIG_DIR/$CHANGEIP_CONFIG_FILE" "$CHANGEIP_CONFIG_BACKUP_DIR/$CHANGEIP_CONFIG_FILE.$$"
  cat <<EOF >"$CHANGEIP_CONFIG_DIR/$CHANGEIP_CONFIG_FILE"
# Settings for changeip
CHANGE_IP_VAR_DIR="${CHANGE_IP_VAR_DIR:-}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Color Settings
CHANGEIP_OUTPUT_COLOR_1="${CHANGEIP_OUTPUT_COLOR_1:-}"
CHANGEIP_OUTPUT_COLOR_2="${CHANGEIP_OUTPUT_COLOR_2:-}"
CHANGEIP_OUTPUT_COLOR_GOOD="${CHANGEIP_OUTPUT_COLOR_GOOD:-}"
CHANGEIP_OUTPUT_COLOR_ERROR="${CHANGEIP_OUTPUT_COLOR_ERROR:-}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Notification Settings
CHANGEIP_NOTIFY_ENABLED="${CHANGEIP_NOTIFY_ENABLED:-}"
CHANGEIP_GOOD_NAME="${CHANGEIP_GOOD_NAME:-}"
CHANGEIP_ERROR_NAME="${CHANGEIP_ERROR_NAME:-}"
CHANGEIP_GOOD_MESSAGE="${CHANGEIP_GOOD_MESSAGE:-}"
CHANGEIP_ERROR_MESSAGE="${CHANGEIP_ERROR_MESSAGE:-}"
CHANGEIP_NOTIFY_CLIENT_NAME="${CHANGEIP_NOTIFY_CLIENT_NAME:-}"
CHANGEIP_NOTIFY_CLIENT_ICON="${CHANGEIP_NOTIFY_CLIENT_ICON:-}"
CHANGEIP_NOTIFY_CLIENT_URGENCY="${CHANGEIP_NOTIFY_CLIENT_URGENCY:-}"

EOF
  if builtin type -t __gen_config_local | grep -q 'function'; then __gen_config_local; fi
  if [ -f "$CHANGEIP_CONFIG_DIR/$CHANGEIP_CONFIG_FILE" ]; then
    [ "$INIT_CONFIG" = "TRUE" ] || printf_green "Your config file for $APPNAME has been created"
    . "$CHANGEIP_CONFIG_DIR/$CHANGEIP_CONFIG_FILE"
    exitCode=0
  else
    printf_red "Failed to create the config file"
    exitCode=1
  fi
  return ${exitCode:-0}
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Help function - Align to 50
__help() {
  __printf_head "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"
  __printf_opts "changeip:  change ip script - $VERSION"
  __printf_head "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"
  __printf_line "Usage: changeip [options]"
  __printf_line "*                               - Changes the IP address and hostname"
  __printf_head "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"
  __printf_opts "Other Options"
  __printf_head "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"
  __printf_line "--help                          - Shows this message"
  __printf_line "--config                        - Generate user config file"
  __printf_line "--version                       - Show script version"
  __printf_line "--options                       - Shows all available options"
  __printf_line "--debug                         - Enables script debugging"
  __printf_line "--raw                           - Removes all formatting on output"
  __printf_head "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# check if arg is a builtin option
__is_an_option() { if echo "$ARRAY" | grep -q "${1:-^}"; then return 1; else return 0; fi; }
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Is current user root
__user_is_root() {
  { [ $(id -u) -eq 0 ] || [ $EUID -eq 0 ] || [ "$WHOAMI" = "root" ]; } && return 0 || return 1
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Is current user not root
__user_is_not_root() {
  if { [ $(id -u) -eq 0 ] || [ $EUID -eq 0 ] || [ "$WHOAMI" = "root" ]; }; then return 1; else return 0; fi
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Check if user is a member of sudo
__sudo_group() {
  grep -sh "${1:-$USER}" "/etc/group" | grep -Eq 'wheel|adm|sudo' || return 1
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# # Get sudo password
__sudoask() {
  ask_for_password sudo true && return 0 || return 1
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Run sudo
__sudorun() {
  __sudoif && __cmd_exists sudo && sudo -HE "$@" || { __sudoif && eval "$@"; }
  return $?
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Test if user has access to sudo
__can_i_sudo() {
  (sudo -vn && sudo -ln) 2>&1 | grep -vq 'may not' >/dev/null && return 0
  __sudo_group "${1:-$USER}" || __sudoif || __sudo true &>/dev/null || return 1
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# User can run sudo
__sudoif() {
  __user_is_root && return 0
  __can_i_sudo "${RUN_USER:-$USER}" && return 0
  __user_is_not_root && __sudoask && return 0 || return 1
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Run command as root
requiresudo() {
  if [ "$CHANGEIP_REQUIRE_SUDO" = "yes" ] && [ -z "$CHANGEIP_REQUIRE_SUDO_RUN" ]; then
    export CHANGEIP_REQUIRE_SUDO="no"
    export CHANGEIP_REQUIRE_SUDO_RUN="true"
    __sudo "$@"
    exit $?
  else
    return 0
  fi
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Execute sudo
__sudo() {
  CMD="${1:-echo}" && shift 1
  CMD_ARGS="${*:--e "${RUN_USER:-$USER}"}"
  SUDO="$(builtin command -v sudo 2>/dev/null || echo 'eval')"
  [ "$(basename -- "$SUDO" 2>/dev/null)" = "sudo" ] && OPTS="--preserve-env=PATH -HE"
  if __sudoif; then
    export PATH="$PATH"
    $SUDO ${OPTS:-} $CMD $CMD_ARGS && true || false
    exitCode=$?
  else
    printf '%s\n' "This requires root to run"
    exitCode=1
  fi
  return ${exitCode:-1}
}
# End of sudo functions
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__trap_exit() {
  exitCode=${exitCode:-0}
  [ -f "$CHANGEIP_TEMP_FILE" ] && rm -Rf "$CHANGEIP_TEMP_FILE" &>/dev/null
  #unset CASJAYSDEV_TITLE_SET && printf '\033]2â”‚;%s\033\\' "${USER}@${HOSTNAME}:${PWD//$HOME/\~} - ${CASJAYSDEV_TITLE_PREV:-$SHELL}"
  if builtin type -t __trap_exit_local | grep -q 'function'; then __trap_exit_local; fi
  return $exitCode
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# User defined functions
__getlipaddr() {
  local CHANGE_IP_VAR_DIR="" IFCONFIG=""
  CHANGE_IP_VAR_DIR="${CHANGE_IP_VAR_DIR:-/var/lib/system-scripts/checkip}"
  [ -d "$CHANGE_IP_VAR_DIR" ] || sudo mkdir -p "$CHANGE_IP_VAR_DIR"
  if [[ "$OSTYPE" =~ ^darwin ]]; then
    NETDEV="$(route get default 2>/dev/null | grep interface | awk '{print $2}')"
  else
    NETDEV="$(ip route 2>/dev/null | grep default | sed -e "s/^.*dev.//" -e "s/.proto.*//" | awk '{print $1}' | head -n1 | grep '^' || echo 'eth0')"
  fi
  IFCONFIG="$(builtin type -P /sbin/ifconfig || builtin type -P ifconfig)"
  if [ -f "$IFCONFIG" ]; then
    # net-tools package
    CURRENT_IP_4="$(/sbin/ifconfig $NETDEV 2>/dev/null | grep -E "venet|inet" | grep -v "127.0.0." | grep 'inet' | grep -v inet6 | awk '{print $2}' | sed s/addr://g | head -n1 | grep '^')"
    CURRENT_IP_6="$(/sbin/ifconfig $NETDEV 2>/dev/null | grep -E "venet|inet" | grep 'inet6' | grep -i global | awk '{print $2}' | head -n1 | grep '^')"
  else
    CURRENT_IP_4="$(ip -o -f inet address show $NETDEV | awk -F'/' '{print $1}' | awk '{print $NF}' | head -n 1 | grep '^')"
    CURRENT_IP_6="$(ip -o -f inet6 address show $NETDEV | awk -F'/' '{print $1}' | awk '{print $NF}' | head -n 1 | grep '^')"
  fi
  [ -n "$NETDEV" ] || NETDEV="lo"
  [ -n "$CURRENT_IP_4" ] || CURRENT_IP_4="127.0.0.1"
  [ -n "$CURRENT_IP_6" ] || CURRENT_IP_6="::1"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# User defined variables/import external variables

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Application Folders
CHANGEIP_CONFIG_FILE="${CHANGEIP_CONFIG_FILE:-settings.conf}"
CHANGEIP_CONFIG_DIR="${CHANGEIP_CONFIG_DIR:-$HOME/.config/myscripts/changeip}"
CHANGEIP_CONFIG_BACKUP_DIR="${CHANGEIP_CONFIG_BACKUP_DIR:-$HOME/.local/share/myscripts/changeip/backups}"
CHANGEIP_LOG_DIR="${CHANGEIP_LOG_DIR:-$HOME/.local/log/changeip}"
CHANGEIP_TEMP_DIR="${CHANGEIP_TEMP_DIR:-$HOME/.local/tmp/system_scripts/changeip}"
CHANGEIP_CACHE_DIR="${CHANGEIP_CACHE_DIR:-$HOME/.cache/changeip}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Color Settings
CHANGEIP_OUTPUT_COLOR_1="${CHANGEIP_OUTPUT_COLOR_1:-33}"
CHANGEIP_OUTPUT_COLOR_2="${CHANGEIP_OUTPUT_COLOR_2:-5}"
CHANGEIP_OUTPUT_COLOR_GOOD="${CHANGEIP_OUTPUT_COLOR_GOOD:-2}"
CHANGEIP_OUTPUT_COLOR_ERROR="${CHANGEIP_OUTPUT_COLOR_ERROR:-1}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Notification Settings
CHANGEIP_NOTIFY_ENABLED="${CHANGEIP_NOTIFY_ENABLED:-yes}"
CHANGEIP_GOOD_NAME="${CHANGEIP_GOOD_NAME:-Great:}"
CHANGEIP_ERROR_NAME="${CHANGEIP_ERROR_NAME:-Error:}"
CHANGEIP_GOOD_MESSAGE="${CHANGEIP_GOOD_MESSAGE:-No errors reported}"
CHANGEIP_ERROR_MESSAGE="${CHANGEIP_ERROR_MESSAGE:-Errors were reported}"
CHANGEIP_NOTIFY_CLIENT_NAME="${CHANGEIP_NOTIFY_CLIENT_NAME:-$APPNAME}"
CHANGEIP_NOTIFY_CLIENT_ICON="${CHANGEIP_NOTIFY_CLIENT_ICON:-notification-new}"
CHANGEIP_NOTIFY_CLIENT_URGENCY="${CHANGEIP_NOTIFY_CLIENT_URGENCY:-normal}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Additional Variables
CHANGE_IP_VAR_DIR="${CHANGE_IP_VAR_DIR:-/var/lib/system-scripts/checkip}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Generate config files
[ -f "$CHANGEIP_CONFIG_DIR/$CHANGEIP_CONFIG_FILE" ] || [ "$*" = "--config" ] || INIT_CONFIG="${INIT_CONFIG:-TRUE}" __gen_config ${SETARGS:-$@}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import config
[ -f "$CHANGEIP_CONFIG_DIR/$CHANGEIP_CONFIG_FILE" ] && . "$CHANGEIP_CONFIG_DIR/$CHANGEIP_CONFIG_FILE"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Ensure Directories exist
[ -d "$CHANGEIP_LOG_DIR" ] || mkdir -p "$CHANGEIP_LOG_DIR" |& __devnull
[ -d "$CHANGEIP_TEMP_DIR" ] || mkdir -p "$CHANGEIP_TEMP_DIR" |& __devnull
[ -d "$CHANGEIP_CACHE_DIR" ] || mkdir -p "$CHANGEIP_CACHE_DIR" |& __devnull
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
CHANGEIP_TEMP_FILE="${CHANGEIP_TEMP_FILE:-$(mktemp $CHANGEIP_TEMP_DIR/XXXXXX 2>/dev/null)}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Setup trap to remove temp file
trap '__trap_exit' EXIT
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Setup notification function
__notifications() {
  __cmd_exists notifications || return
  [ "$CHANGEIP_NOTIFY_ENABLED" = "yes" ] || return
  [ "$SEND_NOTIFICATION" = "no" ] && return
  (
    export SCRIPT_OPTS="" _DEBUG=""
    export NOTIFY_GOOD_MESSAGE="${NOTIFY_GOOD_MESSAGE:-$CHANGEIP_GOOD_MESSAGE}"
    export NOTIFY_ERROR_MESSAGE="${NOTIFY_ERROR_MESSAGE:-$CHANGEIP_ERROR_MESSAGE}"
    export NOTIFY_CLIENT_ICON="${NOTIFY_CLIENT_ICON:-$CHANGEIP_NOTIFY_CLIENT_ICON}"
    export NOTIFY_CLIENT_NAME="${NOTIFY_CLIENT_NAME:-$CHANGEIP_NOTIFY_CLIENT_NAME}"
    export NOTIFY_CLIENT_URGENCY="${NOTIFY_CLIENT_URGENCY:-$CHANGEIP_NOTIFY_CLIENT_URGENCY}"
    notifications "$@"
  ) |& __devnull &
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Set custom actions

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Argument/Option settings
SETARGS=("$@")
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
SHORTOPTS=""
SHORTOPTS+=""
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
LONGOPTS="completions:,config,debug,help,options,raw,version,silent,"
LONGOPTS+=""
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
ARRAY="clean"
ARRAY+=""
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
LIST=""
LIST+=""
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Setup application options
setopts=$(getopt -o "$SHORTOPTS" --long "$LONGOPTS" -n "$APPNAME" -- "$@" 2>/dev/null)
eval set -- "${setopts[@]}" 2>/dev/null
while :; do
  case "$1" in
  --raw)
    shift 1
    export SHOW_RAW="true"
    NC=""
    RESET=""
    BLACK=""
    RED=""
    GREEN=""
    YELLOW=""
    BLUE=""
    PURPLE=""
    CYAN=""
    WHITE=""
    ORANGE=""
    LIGHTRED=""
    BG_GREEN=""
    BG_RED=""
    ICON_INFO="[ info ]"
    ICON_GOOD="[ ok ]"
    ICON_WARN="[ warn ]"
    ICON_ERROR="[ error ]"
    ICON_QUESTION="[ ? ]"
    printf_column() { tee | grep '^'; }
    printf_color() { printf '%b' "$1" | tr -d '\t' | sed '/^%b$/d;s,\x1B\[ 0-9;]*[a-zA-Z],,g'; }
    ;;
  --debug)
    shift 1
    set -xo pipefail
    export SCRIPT_OPTS="--debug"
    export _DEBUG="on"
    __devnull() { tee || return 1; }
    __devnull2() { eval "$@" |& tee -p || return 1; }
    ;;
  --completions)
    if [ "$2" = "short" ]; then
      printf '%s\n' "-$SHORTOPTS" | $CHANGEIP_SED 's|"||g;s|:||g;s|,|,-|g' | tr ',' '\n'
    elif [ "$2" = "long" ]; then
      printf '%s\n' "--$LONGOPTS" | $CHANGEIP_SED 's|"||g;s|:||g;s|,|,--|g' | tr ',' '\n'
    elif [ "$2" = "array" ]; then
      printf '%s\n' "$ARRAY" | $CHANGEIP_SED 's|"||g;s|:||g' | tr ',' '\n'
    elif [ "$2" = "list" ]; then
      printf '%s\n' "$LIST" | $CHANGEIP_SED 's|"||g;s|:||g' | tr ',' '\n'
    else
      exit 1
    fi
    shift 2
    exit $?
    ;;
  --options)
    shift 1
    printf_blue "Current options for ${PROG:-$APPNAME}"
    [ -z "$SHORTOPTS" ] || __list_options "Short Options" "-${SHORTOPTS}" ',' '-' 4
    [ -z "$LONGOPTS" ] || __list_options "Long Options" "--${LONGOPTS}" ',' '--' 4
    [ -z "$ARRAY" ] || __list_options "Base Options" "${ARRAY}" ',' '' 4
    [ -z "$LIST" ] || __list_options "LIST Options" "${LIST}" ',' '' 4
    exit $?
    ;;
  --version)
    shift 1
    __version
    exit $?
    ;;
  --help)
    shift 1
    __help
    exit $?
    ;;
  --config)
    shift 1
    __gen_config
    exit $?
    ;;
  --silent)
    shift 1
    CHANGEIP_SILENT="true"
    ;;
  --)
    shift 1
    break
    ;;
  esac
done
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Get directory from args
# set -- "$@"
# for arg in "$@"; do
# if [ -d "$arg" ]; then
# CHANGEIP_CWD="$arg" && shift 1 && SET_NEW_ARGS=("$@") && break
# elif [ -f "$arg" ]; then
# CHANGEIP_CWD="$(dirname "$arg" 2>/dev/null)" && shift 1 && SET_NEW_ARGS=("$@") && break
# else
# SET_NEW_ARGS+=("$arg")
# fi
# done
# set -- "${SET_NEW_ARGS[@]}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Set directory to first argument
# [ -d "$1" ] && __is_an_option "$1" && CHANGEIP_CWD="$1" && shift 1 || CHANGEIP_CWD="${CHANGEIP_CWD:-$PWD}"
CHANGEIP_CWD="$(realpath "${CHANGEIP_CWD:-$PWD}" 2>/dev/null)"
# if [ -d "$CHANGEIP_CWD" ] && cd "$CHANGEIP_CWD"; then
# if [ "$CHANGEIP_SILENT" != "true" ] && [ "$CWD_SILENCE" != "true" ]; then
# printf_cyan "Setting working dir to $CHANGEIP_CWD"
# fi
# else
# printf_exit "ðŸ’” $CHANGEIP_CWD does not exist ðŸ’”"
# fi
export CHANGEIP_CWD
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Set actions based on variables

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Check for required applications/Network check
requiresudo "$0" "$@" || exit 2 # exit 2 if errors
#cmd_exists --error --ask bash || exit 3 # exit 3 if not found
#am_i_online --error || exit 4           # exit 4 if no internet
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# APP Variables overrides
__getlipaddr
NEWIP4="$(echo "${CURRENT_IP_4:-}" | grep '^')"
NEWIP6="$(echo "${CURRENT_IP_6:-}" | grep '^')"
NEWDOM="$(hostname -d 2>/dev/null | grep '^' || echo 'local')"
NEWSHORT="$(hostname -s 2>/dev/null | grep '^')"
CHANGEIP_SED="$(builtin command -v gsed 2>/dev/null || builtin command -v sed 2>/dev/null)"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Actions based on env
if [ -f "$CHANGE_IP_VAR_DIR/olddomain.txt" ] && [ -s "$CHANGE_IP_VAR_DIR/olddomain.txt" ]; then
  OLDDOM="$(<"$CHANGE_IP_VAR_DIR/olddomain.txt")"
else
  OLDDOM="myserverdomainname"
fi
if [ -f "$CHANGE_IP_VAR_DIR/oldshort.txt" ] && [ -s "$CHANGE_IP_VAR_DIR/oldshort.txt" ]; then
  OLDSHORT="$(<"$CHANGE_IP_VAR_DIR/oldshort.txt")"
else
  OLDSHORT="myserverhostname"
fi
if [ -f "$CHANGE_IP_VAR_DIR/oldipv4.txt" ] && [ -s "$CHANGE_IP_VAR_DIR/oldipv4.txt" ]; then
  OLDIP4="$(<"$CHANGE_IP_VAR_DIR/oldipv4.txt")"
else
  OLDIP4="10.0.20.1"
fi
if [ -f "$CHANGE_IP_VAR_DIR/oldipv6.txt" ] && [ -s "$CHANGE_IP_VAR_DIR/oldipv6.txt" ]; then
  OLDIP6="$(<"$CHANGE_IP_VAR_DIR/oldipv6.txt")"
else
  OLDIP6="2001:db8:edfa:1234:5678::e1a2"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
echo "$OLDIP4" | grep '^$' | head -n1 | grep '^' >"$CHANGE_IP_VAR_DIR/oldipv4.txt"
echo "$OLDIP6" | grep '^$' | head -n1 | grep '^' >"$CHANGE_IP_VAR_DIR/oldipv6.txt"
echo "$OLDDOM" | grep '^$' | head -n1 | grep '^' >"$CHANGE_IP_VAR_DIR/olddomain.txt"
echo "$OLDSHORT" | grep '^$' | head -n1 | grep '^' >"$CHANGE_IP_VAR_DIR/oldshort.txt"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Execute functions

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Execute commands

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# begin main app
case "$1" in
clean)
  printf_cyan "Deleting the files in $CHANGE_IP_VAR_DIR"
  rm -Rf "${CHANGE_IP_VAR_DIR:?printf_exit "The variable CHANGE_IP_VAR_DIR is not set"}"
  mkdir -p "$CHANGE_IP_VAR_DIR"
  exit $?
  ;;
*)
  if [ -z "$NEWIP4" ]; then
    printf_red "no ipv4"
    rm -Rf "$CHANGE_IP_VAR_DIR/myip4.txt" "$CHANGE_IP_VAR_DIR/oldipv4.txt"
    [ -e "/etc/httpd" ] && find /etc/httpd -name 'conf*' -type f -exec $CHANGEIP_SED -i "s#$OLDIP4:443##g" {} \; &>/var/log/changeip
    [ -e "/etc/nginx" ] && find /etc/nginx -name 'conf*' -type f -exec $CHANGEIP_SED -i "s#$OLDIP4:443##g" {} \; &>/var/log/changeip
    [ -e "/etc/apache2" ] && find /etc/apache2 -name 'conf*' -type f -exec $CHANGEIP_SED -i "s#$OLDIP4:443##g" {} \; &>/var/log/changeip
  else
    printf_green "ipv4 works so continuing with IPV4 changes: $NEWIP4"
    echo "$NEWIP4" | grep -v '^$' | head -n1 | grep '^' >"$CHANGE_IP_VAR_DIR/myip4.txt"
    echo "$NEWIP4" | grep -v '^$' | head -n1 | grep '^' >"$CHANGE_IP_VAR_DIR/oldipv4.txt"
    [ -e "/root/.local/bin" ] && find /root/.local/bin -type f -exec $CHANGEIP_SED -i "s#$OLDIP4#$NEWIP4#g" {} \; &>/var/log/changeip
    [ -e "/etc/hosts" ] && find /etc/hosts* -type f -exec $CHANGEIP_SED -i "s#$OLDIP4#$NEWIP4#g" {} \; &>/var/log/changeip
    [ -e "/etc/issue" ] && find /etc/issue* -type f -exec $CHANGEIP_SED -i "s#$OLDIP4#$NEWIP4#g" {} \; &>/var/log/changeip
    [ -e "/etc/proftpd.conf" ] && find /etc/proftpd* -type f -exec $CHANGEIP_SED -i "s#$OLDIP4#$NEWIP4#g" {} \; &>/var/log/changeip
    [ -e "/etc/apache2" ] && find /etc/apache2 -type f -exec $CHANGEIP_SED -i "s#$OLDIP4#$NEWIP4#g" {} \; &>/var/log/changeip
    [ -e "/etc/httpd" ] && find /etc/httpd -type f -exec $CHANGEIP_SED -i "s#$OLDIP4#$NEWIP4#g" {} \; &>/var/log/changeip
    [ -e "/etc/nginx" ] && find /etc/nginx -type f -exec $CHANGEIP_SED -i "s#$OLDIP4#$NEWIP4#g" {} \; &>/var/log/changeip
    [ -e "/etc/postfix" ] && find /etc/postfix -type f -exec $CHANGEIP_SED -i "s#$OLDIP4#$NEWIP4#g" {} \; &>/var/log/changeip
    [ -e "/etc/motd" ] && find /etc/motd* -type f -exec $CHANGEIP_SED -i "s#$OLDIP4#$NEWIP4#g" {} \; &>/var/log/changeip
    [ -e "/etc/named" ] && find /etc/named -type f -exec $CHANGEIP_SED -i "s#$OLDIP4#$NEWIP4#g" {} \; &>/var/log/changeip
    [ -e "/var/www" ] && find /var/www -type f -exec $CHANGEIP_SED -i "s#$OLDIP4#$NEWIP4#g" {} \; &>/var/log/changeip
    [ -e "/var/named" ] && find /var/named -type f -exec $CHANGEIP_SED -i "s#$OLDIP4#$NEWIP4#g" {} \; &>/var/log/changeip
    [ -e "/etc/webmin" ] && find /etc/webmin -type f -exec $CHANGEIP_SED -i "s#$OLDIP4#$NEWIP4#g" {} \; &>/var/log/changeip
    [ -e "/etc/usermin" ] && find /etc/usermin -type f -exec $CHANGEIP_SED -i "s#$OLDIP4#$NEWIP4#g" {} \; &>/var/log/changeip
    [ -e "/var/lib/system-scripts" ] && find /var/lib/system-scripts -type f -exec $CHANGEIP_SED -i "s#$OLDIP4#$NEWIP4#g" {} \; &>/var/log/changeip
    [ -e "/etc/sysconfig/network-scripts" ] && find /etc/sysconfig/network-scripts/ifcfg-* -type f -exec $CHANGEIP_SED -i "s#$OLDIP4#$NEWIP4#g" {} \; &>/var/log/changeip
    [ -e "$CHANGE_IP_VAR_DIR" ] && find "$CHANGE_IP_VAR_DIR" -type f -exec $CHANGEIP_SED -i "s#$OLDIP4#$NEWIP4#g" {} \; &>/var/log/changeip
    if [ "$OLDIP4" != "10.0.20.1" ]; then
      [ -e "/root/.local/bin" ] && find /root/.local/bin -type f -exec $CHANGEIP_SED -i "s#10.0.20.1#$NEWIP4#g" {} \; &>/var/log/changeip
      [ -e "/etc/hosts" ] && find /etc/hosts* -type f -exec $CHANGEIP_SED -i "s#10.0.20.1#$NEWIP4#g" {} \; &>/var/log/changeip
      [ -e "/etc/issue" ] && find /etc/issue* -type f -exec $CHANGEIP_SED -i "s#10.0.20.1#$NEWIP4#g" {} \; &>/var/log/changeip
      [ -e "/etc/proftpd.conf" ] && find /etc/proftpd* -type f -exec $CHANGEIP_SED -i "s#10.0.20.1#$NEWIP4#g" {} \; &>/var/log/changeip
      [ -e "/etc/apache2" ] && find /etc/apache2 -type f -exec $CHANGEIP_SED -i "s#10.0.20.1#$NEWIP4#g" {} \; &>/var/log/changeip
      [ -e "/etc/httpd" ] && find /etc/httpd -type f -exec $CHANGEIP_SED -i "s#10.0.20.1#$NEWIP4#g" {} \; &>/var/log/changeip
      [ -e "/etc/nginx" ] && find /etc/nginx -type f -exec $CHANGEIP_SED -i "s#10.0.20.1#$NEWIP4#g" {} \; &>/var/log/changeip
      [ -e "/etc/postfix" ] && find /etc/postfix -type f -exec $CHANGEIP_SED -i "s#10.0.20.1#$NEWIP4#g" {} \; &>/var/log/changeip
      [ -e "/etc/motd" ] && find /etc/motd* -type f -exec $CHANGEIP_SED -i "s#10.0.20.1#$NEWIP4#g" {} \; &>/var/log/changeip
      [ -e "/etc/named" ] && find /etc/named -type f -exec $CHANGEIP_SED -i "s#10.0.20.1#$NEWIP4#g" {} \; &>/var/log/changeip
      [ -e "/var/www" ] && find /var/www -type f -exec $CHANGEIP_SED -i "s#10.0.20.1#$NEWIP4#g" {} \; &>/var/log/changeip
      [ -e "/var/named" ] && find /var/named -type f -exec $CHANGEIP_SED -i "s#10.0.20.1#$NEWIP4#g" {} \; &>/var/log/changeip
      [ -e "/etc/webmin" ] && find /etc/webmin -type f -exec $CHANGEIP_SED -i "s#10.0.20.1#$NEWIP4#g" {} \; &>/var/log/changeip
      [ -e "/etc/usermin" ] && find /etc/usermin -type f -exec $CHANGEIP_SED -i "s#10.0.20.1#$NEWIP4#g" {} \; &>/var/log/changeip
      [ -e "/etc/sysconfig/network-scripts" ] && find /etc/sysconfig/network-scripts/ifcfg-* -type f -exec $CHANGEIP_SED -i "s#10.0.20.1#$NEWIP4#g" {} \; &>/var/log/changeip
    fi
  fi
  # Change IPV6
  if [ -z "$NEWIP6" ]; then
    printf_red "no ipv6"
    rm -Rf "$CHANGE_IP_VAR_DIR/myip6.txt" "$CHANGE_IP_VAR_DIR/oldipv6.txt"
    [ -e "/etc/httpd" ] && find /etc/httpd -name 'conf*' -type f -exec $CHANGEIP_SED -i "s#\[$OLDIP6\]:443##g" {} \; &>/var/log/changeip
    [ -e "/etc/nginx" ] && find /etc/nginx -name 'conf*' -type f -exec $CHANGEIP_SED -i "s#\[$OLDIP6\]:443##g" {} \; &>/var/log/changeip
    [ -e "/etc/apache2" ] && find /etc/apache2 -name 'conf*' -type f -exec $CHANGEIP_SED -i "s#\[$OLDIP6\]:443##g" {} \; &>/var/log/changeip
  else
    printf_green "ipv6 works so continuing with IPV6 changes: $NEWIP6"
    echo "$NEWIP6" | grep -v '^$' | head -n1 | grep '^' >"$CHANGE_IP_VAR_DIR/myip6.txt"
    echo "$NEWIP6" | grep -v '^$' | head -n1 | grep '^' >"$CHANGE_IP_VAR_DIR/oldipv6.txt"
    [ -e "/root/.local/bin" ] && find /root/.local/bin -type f -exec $CHANGEIP_SED -i "s#$OLDIP6#$NEWIP6#g" {} \; &>/var/log/changeip
    [ -e "/etc/postfix" ] && find /etc/postfix -type f -exec $CHANGEIP_SED -i "s#$OLDIP6#$NEWIP6#g" {} \; &>/var/log/changeip
    [ -e "/etc/apache2" ] && find /etc/apache2 -type f -exec $CHANGEIP_SED -i "s#$OLDIP6#$NEWIP6#g" {} \; &>/var/log/changeip
    [ -e "/etc/httpd" ] && find /etc/httpd -type f -exec $CHANGEIP_SED -i "s#$OLDIP6#$NEWIP6#g" {} \; &>/var/log/changeip
    [ -e "/etc/nginx" ] && find /etc/nginx -type f -exec $CHANGEIP_SED -i "s#$OLDIP6#$NEWIP6#g" {} \; &>/var/log/changeip
    [ -e "/etc/proftpd.conf" ] && find /etc/proftpd* -type f -exec $CHANGEIP_SED -i "s#$OLDIP6#$NEWIP6#g" {} \; &>/var/log/changeip
    [ -e "/etc/named" ] && find /etc/named -type f -exec $CHANGEIP_SED -i "s#$OLDIP6#$NEWIP6#g" {} \; &>/var/log/changeip
    [ -e "/var/named" ] && find /var/named -type f -exec $CHANGEIP_SED -i "s#$OLDIP6#$NEWIP6#g" {} \; &>/var/log/changeip
    [ -e "/var/www" ] && find /var/www -type f -exec $CHANGEIP_SED -i "s#$OLDIP6#$NEWIP6#g" {} \; >/dev/null 2>&1
    [ -e "/etc/hosts" ] && find /etc/hosts* -type f -exec $CHANGEIP_SED -i "s#$OLDIP6#$NEWIP6#g" {} \; &>/var/log/changeip
    [ -e "/etc/issue" ] && find /etc/issue* -type f -exec $CHANGEIP_SED -i "s#$OLDIP6#$NEWIP6#g" {} \; &>/var/log/changeip
    [ -e "/etc/motd" ] && find /etc/motd* -type f -exec $CHANGEIP_SED -i "s#$OLDIP6#$NEWIP6#g" {} \; &>/var/log/changeip
    [ -e "/etc/webmin" ] && find /etc/webmin -type f -exec $CHANGEIP_SED -i "s#$OLDIP6#$NEWIP6#g" {} \; &>/var/log/changeip
    [ -e "/etc/casjaysdev" ] && find /etc/casjaysdev -type f -exec $CHANGEIP_SED -i "s#$OLDIP6#$NEWIP6#g" {} \; &>/var/log/changeip
    [ -e "/etc/sysconfig/network-scripts" ] && find /etc/sysconfig/network-scripts/ifcfg-* -type f -exec $CHANGEIP_SED -i "s#$OLDIP6#$NEWIP6#g" {} \; &>/var/log/changeip
    [ -e "$CHANGE_IP_VAR_DIR" ] && find "$CHANGE_IP_VAR_DIR" -type f -exec $CHANGEIP_SED -i "s#$OLDIP6#$NEWIP6#g" {} \; &>/var/log/changeip
    if [ "$NEWIP6" != "2001:db8:edfa:1234:5678::e1a2" ]; then
      [ -e "/root/.local/bin" ] && find /root/.local/bin -type f -exec $CHANGEIP_SED -i "s#2001:db8:edfa:1234:5678::e1a2#$NEWIP6#g" {} \; &>/var/log/changeip
      [ -e "/etc/postfix" ] && find /etc/postfix -type f -exec $CHANGEIP_SED -i "s#2001:db8:edfa:1234:5678::e1a2#$NEWIP6#g" {} \; &>/var/log/changeip
      [ -e "/etc/apache2" ] && find /etc/apache2 -type f -exec $CHANGEIP_SED -i "s#2001:db8:edfa:1234:5678::e1a2#$NEWIP6#g" {} \; &>/var/log/changeip
      [ -e "/etc/httpd" ] && find /etc/httpd -type f -exec $CHANGEIP_SED -i "s#2001:db8:edfa:1234:5678::e1a2#$NEWIP6#g" {} \; &>/var/log/changeip
      [ -e "/etc/nginx" ] && find /etc/nginx -type f -exec $CHANGEIP_SED -i "s#2001:db8:edfa:1234:5678::e1a2#$NEWIP6#g" {} \; &>/var/log/changeip
      [ -e "/etc/proftpd.conf" ] && find /etc/proftpd* -type f -exec $CHANGEIP_SED -i "s#2001:db8:edfa:1234:5678::e1a2#$NEWIP6#g" {} \; &>/var/log/changeip
      [ -e "/etc/named" ] && find /etc/named -type f -exec $CHANGEIP_SED -i "s#2001:db8:edfa:1234:5678::e1a2#$NEWIP6#g" {} \; &>/var/log/changeip
      [ -e "/var/named" ] && find /var/named -type f -exec $CHANGEIP_SED -i "s#2001:db8:edfa:1234:5678::e1a2#$NEWIP6#g" {} \; &>/var/log/changeip
      [ -e "/var/www" ] && find /var/www -type f -exec $CHANGEIP_SED -i "s#2001:db8:edfa:1234:5678::e1a2#$NEWIP6#g" {} \; >/dev/null 2>&1
      [ -e "/etc/hosts" ] && find /etc/hosts* -type f -exec $CHANGEIP_SED -i "s#2001:db8:edfa:1234:5678::e1a2#$NEWIP6#g" {} \; &>/var/log/changeip
      [ -e "/etc/issue" ] && find /etc/issue* -type f -exec $CHANGEIP_SED -i "s#2001:db8:edfa:1234:5678::e1a2#$NEWIP6#g" {} \; &>/var/log/changeip
      [ -e "/etc/motd" ] && find /etc/motd* -type f -exec $CHANGEIP_SED -i "s#2001:db8:edfa:1234:5678::e1a2#$NEWIP6#g" {} \; &>/var/log/changeip
      [ -e "/etc/webmin" ] && find /etc/webmin -type f -exec $CHANGEIP_SED -i "s#2001:db8:edfa:1234:5678::e1a2#$NEWIP6#g" {} \; &>/var/log/changeip
      [ -e "/etc/casjaysdev" ] && find /etc/casjaysdev -type f -exec $CHANGEIP_SED -i "s#2001:db8:edfa:1234:5678::e1a2#$NEWIP6#g" {} \; &>/var/log/changeip
      [ -e "/etc/sysconfig/network-scripts" ] && find /etc/sysconfig/network-scripts/ifcfg-* -type f -exec $CHANGEIP_SED -i "s#2001:db8:edfa:1234:5678::e1a2#$NEWIP6#g" {} \; &>/var/log/changeip
    fi
  fi
  # Change Domain
  printf_green "Changing the domain to: $NEWDOM"
  echo "$NEWDOM" | grep -v '^$' | head -n1 | grep '^' >"$CHANGE_IP_VAR_DIR/mydomain.txt"
  echo "$NEWDOM" | grep -v '^$' | head -n1 | grep '^' >"$CHANGE_IP_VAR_DIR/olddomain.txt"
  [ -e "/root/.local/bin" ] && find /root/.local/bin -type f -exec $CHANGEIP_SED -i "s#$OLDDOM#$NEWDOM#g" {} \; &>/var/log/changeip
  [ -e "/etc/postfix" ] && find /etc/postfix -type f -exec $CHANGEIP_SED -i "s#$OLDDOM#$NEWDOM#g" {} \; &>/var/log/changeip
  [ -e "/etc/apache2" ] && find /etc/httpd -type f -exec $CHANGEIP_SED -i "s#$OLDDOM#$NEWDOM#g" {} \; &>/var/log/changeip
  [ -e "/etc/httpd" ] && find /etc/httpd -type f -exec $CHANGEIP_SED -i "s#$OLDDOM#$NEWDOM#g" {} \; &>/var/log/changeip
  [ -e "/etc/nginx" ] && find /etc/nginx -type f -exec $CHANGEIP_SED -i "s#$OLDDOM#$NEWDOM#g" {} \; &>/var/log/changeip
  [ -e "/etc/proftpd.conf" ] && find /etc/proftpd* -type f -exec $CHANGEIP_SED -i "s#$OLDDOM#$NEWDOM#g" {} \; &>/var/log/changeip
  [ -e "/etc/named" ] && find /etc/named -type f -exec $CHANGEIP_SED -i "s#$OLDDOM#$NEWDOM#g" {} \; &>/var/log/changeip
  [ -e "/var/named" ] && find /var/named -type f -exec $CHANGEIP_SED -i "s#$OLDDOM#$NEWDOM#g" {} \; &>/var/log/changeip
  [ -e "/var/www" ] && find /var/www -type f -exec $CHANGEIP_SED -i "s#$OLDDOM#$NEWDOM#g" {} \; >/dev/null 2>&1
  [ -e "/etc/hosts" ] && find /etc/hosts* -type f -exec $CHANGEIP_SED -i "s#$OLDDOM#$NEWDOM#g" {} \; &>/var/log/changeip
  [ -e "/etc/issue" ] && find /etc/issue* -type f -exec $CHANGEIP_SED -i "s#$OLDDOM#$NEWDOM#g" {} \; &>/var/log/changeip
  [ -e "/etc/motd" ] && find /etc/motd* -type f -exec $CHANGEIP_SED -i "s#$OLDDOM#$NEWDOM#g" {} \; &>/var/log/changeip
  [ -e "/etc/munin" ] && find /etc/munin -type f -exec $CHANGEIP_SED -i "s#$OLDDOM#$NEWDOM#g" {} \; &>/var/log/changeip
  [ -e "/etc/rc.d/rc.local" ] && find /etc/rc.d/rc.local -type f -exec $CHANGEIP_SED -i "s#$OLDDOM#$NEWDOM#g" {} \; &>/var/log/changeip
  [ -e "/etc/cron.d" ] && find /etc/cron* -type f -exec $CHANGEIP_SED -i "s#$OLDDOM#$NEWDOM#g" {} \; &>/var/log/changeip
  [ -e "/etc/casjaysdev" ] && find /etc/casjaysdev -type f -exec $CHANGEIP_SED -i "s#$OLDDOM#$NEWDOM#g" {} \; &>/var/log/changeip
  [ -e "/etc/webmin" ] && find /etc/webmin -type f -exec $CHANGEIP_SED -i "s#$OLDDOM#$NEWDOM#g" {} \; &>/var/log/changeip
  [ -e "/etc/webalizer" ] && find /etc/webalizer* -type f -exec $CHANGEIP_SED -i "s#$OLDDOM#$NEWDOM#g" {} \; &>/var/log/changeip
  [ -e "/etc/uptimed.conf" ] && find /etc/uptimed.conf -type f -exec $CHANGEIP_SED -i "s#$OLDDOM#$NEWDOM#g" {} \; &>/var/log/changeip
  [ -e "$CHANGE_IP_VAR_DIR" ] && find "$CHANGE_IP_VAR_DIR" -type f -exec $CHANGEIP_SED -i "s#$OLDDOM#$NEWDOM#g" {} \; &>/var/log/changeip
  [ -e "/root/.local/bin" ] && find /root/.local/bin -type f -exec $CHANGEIP_SED -i "s#myserverdomainname#$NEWDOM#g" {} \; &>/var/log/changeip
  if [ "$NEWDOM" != "myserverdomainname" ]; then
    [ -e "/etc/postfix" ] && find /etc/postfix -type f -exec $CHANGEIP_SED -i "s#myserverdomainname#$NEWDOM#g" {} \; &>/var/log/changeip
    [ -e "/etc/apache2" ] && find /etc/httpd -type f -exec $CHANGEIP_SED -i "s#myserverdomainname#$NEWDOM#g" {} \; &>/var/log/changeip
    [ -e "/etc/httpd" ] && find /etc/httpd -type f -exec $CHANGEIP_SED -i "s#myserverdomainname#$NEWDOM#g" {} \; &>/var/log/changeip
    [ -e "/etc/nginx" ] && find /etc/nginx -type f -exec $CHANGEIP_SED -i "s#myserverdomainname#$NEWDOM#g" {} \; &>/var/log/changeip
    [ -e "/etc/proftpd.conf" ] && find /etc/proftpd* -type f -exec $CHANGEIP_SED -i "s#myserverdomainname#$NEWDOM#g" {} \; &>/var/log/changeip
    [ -e "/etc/named" ] && find /etc/named -type f -exec $CHANGEIP_SED -i "s#myserverdomainname#$NEWDOM#g" {} \; &>/var/log/changeip
    [ -e "/var/named" ] && find /var/named -type f -exec $CHANGEIP_SED -i "s#myserverdomainname#$NEWDOM#g" {} \; &>/var/log/changeip
    [ -e "/var/www" ] && find /var/www -type f -exec $CHANGEIP_SED -i "s#myserverdomainname#$NEWDOM#g" {} \; >/dev/null 2>&1
    [ -e "/etc/hosts" ] && find /etc/hosts* -type f -exec $CHANGEIP_SED -i "s#myserverdomainname#$NEWDOM#g" {} \; &>/var/log/changeip
    [ -e "/etc/issue" ] && find /etc/issue* -type f -exec $CHANGEIP_SED -i "s#myserverdomainname#$NEWDOM#g" {} \; &>/var/log/changeip
    [ -e "/etc/motd" ] && find /etc/motd* -type f -exec $CHANGEIP_SED -i "s#myserverdomainname#$NEWDOM#g" {} \; &>/var/log/changeip
    [ -e "/etc/munin" ] && find /etc/munin -type f -exec $CHANGEIP_SED -i "s#myserverdomainname#$NEWDOM#g" {} \; &>/var/log/changeip
    [ -e "/etc/rc.d/rc.local" ] && find /etc/rc.d/rc.local -type f -exec $CHANGEIP_SED -i "s#myserverdomainname#$NEWDOM#g" {} \; &>/var/log/changeip
    [ -e "/etc/cron.d" ] && find /etc/cron* -type f -exec $CHANGEIP_SED -i "s#myserverdomainname#$NEWDOM#g" {} \; &>/var/log/changeip
    [ -e "/etc/casjaysdev" ] && find /etc/casjaysdev -type f -exec $CHANGEIP_SED -i "s#myserverdomainname#$NEWDOM#g" {} \; &>/var/log/changeip
    [ -e "/etc/webmin" ] && find /etc/webmin -type f -exec $CHANGEIP_SED -i "s#myserverdomainname#$NEWDOM#g" {} \; &>/var/log/changeip
    [ -e "/etc/webalizer" ] && find /etc/webalizer* -type f -exec $CHANGEIP_SED -i "s#myserverdomainname#$NEWDOM#g" {} \; &>/var/log/changeip
    [ -e "/etc/uptimed.conf" ] && find /etc/uptimed.conf -type f -exec $CHANGEIP_SED -i "s#myserverdomainname#$NEWDOM#g" {} \; &>/var/log/changeip
  fi
  # Change Short HostName
  printf_green "Setting the hostname to: $NEWSHORT"
  echo "$NEWSHORT" | grep -v '^$' | head -n1 | grep '^' >"$CHANGE_IP_VAR_DIR/myshort.txt"
  echo "$NEWSHORT" | grep -v '^$' | head -n1 | grep '^' >"$CHANGE_IP_VAR_DIR/oldshort.txt"
  [ -e "/root/.local/bin" ] && find /root/.local/bin -type f -exec $CHANGEIP_SED -i "s#$OLDSHORT#$NEWSHORT#g" {} \; &>/var/log/changeip
  [ -e "/etc/casjaysdev" ] && find /etc/casjaysdev -type f -exec $CHANGEIP_SED -i "s#$OLDSHORT#$NEWSHORT#g" {} \; &>/var/log/changeip
  [ -e "/etc/apache2" ] && find /etc/apache2 -type f -exec $CHANGEIP_SED -i "s#$OLDSHORT#$NEWSHORT#g" {} \; &>/var/log/changeip
  [ -e "/etc/httpd" ] && find /etc/httpd -type f -exec $CHANGEIP_SED -i "s#$OLDSHORT#$NEWSHORT#g" {} \; &>/var/log/changeip
  [ -e "/etc/nginx" ] && find /etc/nginx -type f -exec $CHANGEIP_SED -i "s#$OLDSHORT#$NEWSHORT#g" {} \; &>/var/log/changeip
  [ -e "$CHANGE_IP_VAR_DIR" ] && find "$CHANGE_IP_VAR_DIR" -type f -exec $CHANGEIP_SED -i "s#$OLDSHORT#$NEWSHORT#g" {} \; &>/var/log/changeip
  if [ "$NEWSHORT" != "myserverhostname" ]; then
    [ -e "/root/.local/bin" ] && find /root/.local/bin -type f -exec $CHANGEIP_SED -i "s#myserverhostname#$NEWSHORT#g" {} \; &>/var/log/changeip
    [ -e "/etc/casjaysdev" ] && find /etc/casjaysdev -type f -exec $CHANGEIP_SED -i "s#myserverhostname#$NEWSHORT#g" {} \; &>/var/log/changeip
    [ -e "/etc/apache2" ] && find /etc/apache2 -type f -exec $CHANGEIP_SED -i "s#myserverhostname#$NEWSHORT#g" {} \; &>/var/log/changeip
    [ -e "/etc/httpd" ] && find /etc/httpd -type f -exec $CHANGEIP_SED -i "s#myserverhostname#$NEWSHORT#g" {} \; &>/var/log/changeip
    [ -e "/etc/nginx" ] && find /etc/nginx -type f -exec $CHANGEIP_SED -i "s#myserverhostname#$NEWSHORT#g" {} \; &>/var/log/changeip
  fi
  # Print status
  FULL_HOSTNAME="$(hostname -f | grep '^' || echo '')"
  [ -z "$FULL_HOSTNAME" ] || printf_cyan "The full hostname is $FULL_HOSTNAME"
  [ -z "$NEWSHORT" ] || [ "$OLDSHORT" = "$NEWSHORT" ] || printf_cyan "Changed the HOSTNAME from $OLDSHORT to $NEWSHORT"
  [ -z "$NEWDOM" ] || [ "$OLDDOM" = "$NEWDOM" ] || printf_cyan "Changed the DOMAIN from $OLDDOM to $NEWDOM"
  [ -z "$NEWIP4" ] || [ "$OLDIP4" = "$NEWIP4" ] || printf_cyan "Changed the IP4 from $OLDIP4 to $NEWIP4"
  [ -z "$NEWIP6" ] || [ "$OLDIP6" = "$NEWIP6" ] || printf_cyan "Changed the IP6 from $OLDIP6 to $NEWIP6"
  ;;
esac
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Set exit code
exitCode="${exitCode:-0}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# End application
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# lets exit with code
exit ${exitCode:-0}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# ex: ts=2 sw=2 et filetype=sh
