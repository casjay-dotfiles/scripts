#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version           :  202510010450-git
# @Author            :  Jason Hempstead
# @Contact           :  jason@casjaysdev.pro
# @License           :  LICENSE.md
# @ReadME            :  gen-links --help
# @Copyright         :  Copyright: (c) 2025 Jason Hempstead, Casjays Developments
# @Created           :  Sunday, Jan 23, 2022 23:40 EST
# @File              :  gen-links
# @Description       :  Create a links from a text document with tab completion
# @TODO              :
# @Other             :
# @Resource          :
# - - - - - - - - - - - - - - - - - - - - - - - - -'
_gen-links() {
  ___findcmd() { find -L "${1:-$CONFDIR/}" -maxdepth ${3:-3} -type ${2:-f} 2>/dev/null | sed 's#'${1:-$CONFDIR}'##g' | grep '^' || return 1; }
  local CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
  local cur prev words cword opts split
  local cur="${COMP_WORDS[$COMP_CWORD]}"
  local prev="${COMP_WORDS[$COMP_CWORD - 1]}"
  local CONFFILE="settings.conf"
  local CONFDIR="$HOME/.config/myscripts/gen-links"
  local SEARCHDIR="${CONFDIR:-$HOME/.config/myscripts/gen-links}"
  #local SEARCHCMD="$(___findcmd "$SEARCHDIR/" "d" "1" | sort -u)"
  local SHOW_COMP_OPTS=""
  local OPTS=""
  local LONGOPTS="--completions --config --debug --dir --help --options --raw --version --silent --force --lookup"
  local SHORTOPTS=""
  local ARRAY="watch bookmark"
  local COMMANDS="watch bookmark"

  # Initialize completion (compatible with or without bash-completion)
  if declare -F _init_completion >/dev/null 2>&1; then
    _init_completion || return
  fi

  if [[ "$SHOW_COMP_OPTS" != "" ]]; then
    local SHOW_COMP_OPTS_SEP="${SHOW_COMP_OPTS//,/ }"
    compopt -o $SHOW_COMP_OPTS_SEP 2>/dev/null || true
  fi

  if [[ ${cur} == --* ]]; then
    COMPREPLY=($(compgen -W '${LONGOPTS}' -- ${cur}))
    return
  elif [[ ${cur} == -* ]]; then
    COMPREPLY=($(compgen -W '${SHORTOPTS}' -- ${cur}))
    return
  else
    case "${COMP_WORDS[1]:-$prev}" in
    --options)
      local prev="--options"
      COMPREPLY=($(compgen -W '' -- "${cur}"))
      ;;

    --config)
      local prev="--config"
      COMPREPLY=($(compgen -W '' -- "${cur}"))
      ;;

    --help)
      prev="--help"
      COMPREPLY=($(compgen -W '' -- "${cur}"))
      ;;

    --version)
      local prev="--version"
      COMPREPLY=($(compgen -W '' -- "${cur}"))
      ;;

    --dir)
      _filedir -d
      ;;
    --force | --lookup | --silent)
      # No additional arguments
      ;;
    
    watch)
      case $COMP_CWORD in
        2)
          # Input file - prefer .txt, .md files, plus directories
          compopt -o filenames -o nospace 2>/dev/null || true
          COMPREPLY=($(compgen -f -X '!*.@(txt|md|list|links)' -- "${cur}"))
          # Add directories
          COMPREPLY+=($(compgen -d -- "${cur}"))
          [[ ${#COMPREPLY[@]} -eq 0 ]] && COMPREPLY=($(compgen -f -d -- "${cur}"))
          ;;
        3)
          # Output file - suggest .html, plus directories
          compopt -o filenames -o nospace 2>/dev/null || true
          local base="${cur%.html}"
          COMPREPLY=($(compgen -W "${base}.html" -- "${cur}"))
          COMPREPLY+=($(compgen -d -- "${cur}"))
          [[ ${#COMPREPLY[@]} -eq 0 ]] && COMPREPLY=($(compgen -f -d -- "${cur}"))
          ;;
        4)
          # Time interval in seconds
          COMPREPLY=($(compgen -W '1 2 5 10 15 30 60 120 300' -- "${cur}"))
          ;;
      esac
      ;;

    bookmark)
      case $COMP_CWORD in
        2)
          # URL - no completion needed
          ;;
        3)
          # Optional name/file - suggest based on input, plus directories
          compopt -o filenames -o nospace 2>/dev/null || true
          COMPREPLY=($(compgen -f -X '!*.@(txt|html)' -- "${cur}"))
          COMPREPLY+=($(compgen -d -- "${cur}"))
          ;;
      esac
      ;;

    *)
      case $COMP_CWORD in
        1)
          # Commands or flags
          COMPREPLY=($(compgen -W '${COMMANDS} ${LONGOPTS}' -- "${cur}"))
          # Also offer file completion for direct usage (files + directories)
          compopt -o filenames -o nospace 2>/dev/null || true
          local file_comps=($(compgen -f -X '!*.@(txt|md|list|links)' -- "${cur}"))
          local dir_comps=($(compgen -d -- "${cur}"))
          COMPREPLY+=("${file_comps[@]}")
          COMPREPLY+=("${dir_comps[@]}")
          ;;
        2)
          # Input file - prefer text files, plus directories
          compopt -o filenames -o nospace 2>/dev/null || true
          COMPREPLY=($(compgen -f -X '!*.@(txt|md|list|links)' -- "${cur}"))
          COMPREPLY+=($(compgen -d -- "${cur}"))
          [[ ${#COMPREPLY[@]} -eq 0 ]] && COMPREPLY=($(compgen -f -d -- "${cur}"))
          ;;
        3)
          # Output file - suggest .html extension, plus directories
          compopt -o filenames -o nospace 2>/dev/null || true
          if [[ "${cur}" != *.html ]]; then
            local base="${cur}"
            [[ "${base}" == *.* ]] && base="${base%.*}"
            COMPREPLY=($(compgen -W "${base}.html" -- "${cur}"))
          fi
          COMPREPLY+=($(compgen -f -d -- "${cur}"))
          ;;
      esac
      ;;
    esac
  fi
  $split && return
} &&
  # - - - - - - - - - - - - - - - - - - - - - - - - -
  # enable completions
  complete -F _gen-links gen-links
