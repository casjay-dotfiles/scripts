#!/usr/bin/env bash
# shellcheck shell=bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version           :  202303271139-git
# @@Author           :  Jason Hempstead
# @@Contact          :  jason@casjaysdev.pro
# @@License          :  LICENSE.md
# @@ReadME           :  proxmox-cli --help
# @@Copyright        :  Copyright: (c) 2023 Jason Hempstead, Casjays Developments
# @@Created          :  Monday, Mar 27, 2023 20:10 EDT
# @@File             :  proxmox-cli
# @@Description      :
# @@Changelog        :
# @@TODO             :  Turn this into a full proxmox client
# @@Other            :
# @@Resource         :
# @@Terminal App     :  no
# @@sudo/root        :  no
# @@Template         :  completions/system
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_proxmox-cli_completion() {
  _init_completion || return
  #####################################################################
  local cur prev words cword opts split CONFDIR="" CONFFILE="" SEARCHDIR=""
  local SHOW_COMP_OPTS="" SHORTOPTS="" LONGOPTS="" ARRAY="" LIST="" SHOW_COMP_OPTS_SEP=""
  #####################################################################
  ___ls() { ls -A "$1" 2>/dev/null | grep -v '^$' | grep '^' || false; }
  ___grep() { GREP_COLORS="" grep -shE '^.*=*..*$' "$1" 2>/dev/null | sed 's|"||g' 2>/dev/null | grep '^' || false; }
  ___findcmd() { find -L "${1:-$CONFDIR/}" -maxdepth ${3:-3} -type ${2:-f} 2>/dev/null | sed 's#'${1:-$CONFDIR}'##g' | grep '^' || return 1; }
  #####################################################################
  cur="${COMP_WORDS[$COMP_CWORD]}"
  prev="${COMP_WORDS[$COMP_CWORD - 1]}"
  #####################################################################
  CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
  #####################################################################
  CONFFILE="settings.conf"
  CONFDIR="$HOME/.config/myscripts/proxmox-cli"
  SEARCHDIR="${CONFDIR:-$HOME/.config/myscripts/proxmox-cli}"
  #####################################################################
  SHOW_COMP_OPTS=""
  #####################################################################
  SHORTOPTS="-u -p -m"
  SHORTOPTS+=""
  #####################################################################
  LONGOPTS="--completions --config --debug --dir --help --options --raw --version --silent "
  LONGOPTS+="--force --machine --node --ssh --password --user"
  #####################################################################
  ARRAY="nodes ssh reset web config status power agent check server iso lxc vm"
  ISO_COMMANDS="list download delete info"
  LXC_COMMANDS="list templates create delete start stop status console"
  VM_COMMANDS="list create delete start stop status console clone snapshot"
  #####################################################################
  LIST=""
  LIST+=""
  #####################################################################
  if [ "$SHOW_COMP_OPTS" != "" ]; then
    SHOW_COMP_OPTS_SEP="${SHOW_COMP_OPTS//,/ }"
    compopt -o $SHOW_COMP_OPTS_SEP
  fi
  #####################################################################
  if [[ ${cur} == --* ]]; then
    COMPREPLY=($(compgen -W '${LONGOPTS}' -- ${cur}))
  elif [[ ${cur} == -* ]]; then
    if [ -n "$SHORTOPTS" ]; then
      COMPREPLY=($(compgen -W '${SHORTOPTS}' -- ${cur}))
    else
      COMPREPLY=($(compgen -W '${LONGOPTS}' -- ${cur}))
    fi
  else
    case "${prev:-${COMP_WORDS[1]}}" in
    --completions)
      prev=""
      COMPREPLY=($(compgen -W 'long short list array' -- "$cur"))
      ;;
    --config | --debug | --help | --options | --raw | --version)
      COMPREPLY=($(compgen -W '${ARRAY} ${LONGOPTS} ${SHORTOPTS}' -- ${cur}))
      return 0
      ;;
    --dir)
      prev="dir"
      [ "$cword" -le 2 ] && _filedir -d || COMPREPLY=($(compgen -W '${ARRAY}' -- "$cur"))
      ;;
    --web | --ssh | reset)
      COMPREPLY=($(compgen -W '' -- "${cur}"))
      compopt -o nospace
      ;;
    --node)
      # Complete with available node config files
      COMPREPLY=($(compgen -W "$(ls $CONFDIR/ 2>/dev/null | grep -v 'settings.conf')" -- "${cur}"))
      ;;
    --user | --password | --machine)
      # These expect custom input
      ;;
    nodes)
      COMPREPLY=($(compgen -W 'list' -- "${cur}"))
      ;;
    iso)
      COMPREPLY=($(compgen -W '${ISO_COMMANDS}' -- "${cur}"))
      ;;
    lxc)
      COMPREPLY=($(compgen -W '${LXC_COMMANDS}' -- "${cur}"))
      ;;
    vm)
      COMPREPLY=($(compgen -W '${VM_COMMANDS}' -- "${cur}"))
      ;;
    ssh | agent)
      COMPREPLY=($(compgen -W '$(echo {100..999})' -- "${cur}"))
      ;;
    power)
      [ $COMP_CWORD -eq 2 ] && COMPREPLY=($(compgen -W 'on off' -- "${cur}")) ||
        COMPREPLY=($(compgen -W '$(echo {100..999})' -- "${cur}"))
      ;;
    check | server | config | status)
      # No additional arguments
      ;;
    *)
      COMPREPLY=($(compgen -W '${ARRAY}' -- "$cur"))
      return 0
      ;;
    esac
  fi
} &&
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # enable completions
  complete -F _proxmox-cli_completion proxmox-cli

# ex: ts=2 sw=2 et filetype=sh
