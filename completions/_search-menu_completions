#!/usr/bin/env bash
# shellcheck shell=bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version           :  202302282309-git
# @@Author           :  Jason Hempstead
# @@Contact          :  jason@casjaysdev.pro
# @@License          :  WTFPL
# @@ReadME           :  search-menu --help
# @@Copyright        :  Copyright: (c) 2023 Jason Hempstead, Casjays Developments
# @@Created          :  Tuesday, Feb 28, 2023 23:09 EST
# @@File             :  search-menu
# @@Description      :  Search various search engines
# @@Changelog        :
# @@TODO             :  Better documentation
# @@Other            :
# @@Resource         :
# @@Terminal App     :  no
# @@sudo/root        :  no
# @@Template         :  completions/system
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_search-menu_completion() {
  _init_completion || return
  #####################################################################
  local cur prev words cword opts split CONFDIR="" CONFFILE="" SEARCHDIR=""
  local SHOW_COMP_OPTS="" SHORTOPTS="" LONGOPTS="" ARRAY="" LIST="" SHOW_COMP_OPTS_SEP=""
  #####################################################################
  ___ls() { ls -A "$1" 2>/dev/null | grep -v '^$' | grep '^' || false; }
  ___grep() { GREP_COLORS="" grep -shE '^.*=*..*$' "$1" 2>/dev/null | sed 's|"||g' 2>/dev/null | grep '^' || false; }
  ___findcmd() { find -L "${1:-$CONFDIR/}" -maxdepth ${3:-3} -type ${2:-f} 2>/dev/null | sed 's#'${1:-$CONFDIR}'##g' | grep '^' || return 1; }
  #####################################################################
  cur="${COMP_WORDS[$COMP_CWORD]}"
  prev="${COMP_WORDS[$COMP_CWORD - 1]}"
  #####################################################################
  CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
  #####################################################################
  CONFFILE="settings.conf"
  CONFDIR="$HOME/.config/myscripts/search-menu"
  SEARCHDIR="${CONFDIR:-$HOME/.config/myscripts/search-menu}"
  #####################################################################
  SHOW_COMP_OPTS=""
  #####################################################################
  SHORTOPTS=""
  SHORTOPTS+=""
  #####################################################################
  LONGOPTS="--completions --config --debug --dir --help --options --raw --version "
  LONGOPTS+=",--providers"
  #####################################################################
  ARRAY="development engines media news os all default packages"
  ARRAY+=""
  #####################################################################
  LIST="alpine archlinux bbcnews bing brave cnn duckduckgo github gitlab google "
  LIST+="googlenews googleOpenSource odysee reddit sourceforge stackoverflow "
  LIST+="whoogle wikipedia wiktionary youtube "
  #####################################################################
  if [ "$SHOW_COMP_OPTS" != "" ]; then
    SHOW_COMP_OPTS_SEP="${SHOW_COMP_OPTS//,/ }"
    compopt -o $SHOW_COMP_OPTS_SEP
  fi
  #####################################################################
  if [[ ${cur} == --* ]]; then
    COMPREPLY=($(compgen -W '${LONGOPTS}' -- ${cur}))
  elif [[ ${cur} == -* ]]; then
    if [ -n "$SHORTOPTS" ]; then
      COMPREPLY=($(compgen -W '${SHORTOPTS}' -- ${cur}))
    else
      COMPREPLY=($(compgen -W '${LONGOPTS}' -- ${cur}))
    fi
  else
    case "${prev:-${COMP_WORDS[1]}}" in
    --completions)
      prev=""
      COMPREPLY=($(compgen -W 'long short list array' -- "$cur"))
      ;;
    --config | --debug | --help | --options | --raw | --version)
      COMPREPLY=($(compgen -W '${ARRAY} ${LONGOPTS} ${SHORTOPTS}' -- ${cur}))
      return 0
      ;;
    --dir)
      prev="dir"
      COMPREPLY=($(compgen -W '${ARRAY}' -- "$cur"))
      ;;
    --providers)
      prev="providers"
      COMPREPLY=($(compgen -W '${ARRAY}' -- "$cur"))
      compopt -o nospace
      ;;

    default)
      prev="$1"
      if [ $COMP_CWORD -ge 2 ]; then
        COMPREPLY=($(compgen -W '{a..z}' -- "${cur}"))
        compopt -o nospace
        return
      else
        COMPREPLY=($(compgen -W '' -- "$cur"))
      fi
      ;;

    all)
      prev="$1"
      if [ $COMP_CWORD -ge 3 ]; then
        COMPREPLY=($(compgen -W '{a..z}' -- "${cur}"))
        compopt -o nospace
        return
      else
        COMPREPLY=($(compgen -W '${LIST}' -- "$cur"))
      fi
      ;;

    development)
      prev="$1"
      if [ $COMP_CWORD -ge 3 ]; then
        COMPREPLY=($(compgen -W '{a..z}' -- "${cur}"))
        compopt -o nospace
        return
      else
        COMPREPLY=($(compgen -W 'github gitlab googleOpenSource sourceforge stackoverflow' -- "$cur"))
      fi
      ;;

    engines)
      prev="$1"
      if [ $COMP_CWORD -ge 3 ]; then
        COMPREPLY=($(compgen -W '{a..z}' -- "${cur}"))
        compopt -o nospace
        return
      else
        COMPREPLY=($(compgen -W 'casjaysdev duckduckgo google brave bing' -- "$cur"))
      fi
      ;;

    news)
      prev="$1"
      if [ $COMP_CWORD -ge 3 ]; then
        COMPREPLY=($(compgen -W '{a..z}' -- "${cur}"))
        compopt -o nospace
        return
      else
        COMPREPLY=($(compgen -W 'default wikipedia wiktionary googlenews cnn bbcnews' -- "$cur"))
      fi
      ;;

    media)
      prev="$1"
      if [ $COMP_CWORD -ge 3 ]; then
        COMPREPLY=($(compgen -W '{a..z}' -- "${cur}"))
        compopt -o nospace
        return
      else
        COMPREPLY=($(compgen -W 'default reddit odysee youtube' -- "$cur"))
      fi
      ;;

    os)
      prev="$1"
      if [ $COMP_CWORD -ge 3 ]; then
        COMPREPLY=($(compgen -W '{a..z}' -- "${cur}"))
        compopt -o nospace
        return
      else
        COMPREPLY=($(compgen -W 'default archwiki alpinewiki' -- "$cur"))
      fi
      ;;

    packages)
      prev="$1"
      if [ $COMP_CWORD -ge 3 ]; then
        COMPREPLY=($(compgen -W '{a..z}' -- "${cur}"))
        compopt -o nospace
        return
      else
        COMPREPLY=($(compgen -W 'default alpine arch pkgs' -- "$cur"))
      fi
      ;;

    *)
      if [ $COMP_CWORD -ge 3 ]; then
        COMPREPLY=($(compgen -W '{a..z}' -- "${cur}"))
        compopt -o nospace
        return
      elif [ $COMP_CWORD -eq 2 ]; then
        COMPREPLY=($(compgen -W '${LIST}' -- "${cur}"))
        compopt -o nospace
        return
      else
        COMPREPLY=($(compgen -W '${ARRAY}' -- "$cur"))
      fi
      ;;
    esac
  fi
  #
  # if [ -n "$FILEDIR" ]; then _filedir; fi
  # if [ $cword -gt 2 ]; then
  #   return
  # elif [ $cword == 2 ]; then
  #   _filedir
  #   compopt -o nospace
  #   return
  # elif [ $cword -eq 1 ]; then
  #   COMPREPLY=($(compgen -W '{a..z}{a..z}' -- "${cur}"))
  #   compopt -o nospace
  #   return
  # if [ "$ARRAY" = "show__none" ]; then
  #   COMPREPLY=($(compgen -W '' -- "${cur}"))
  # elif [ "$ARRAY" = "show__filedir" ]; then
  #   _filedir
  # elif [ "$ARRAY" = "show__commands" ]; then
  #   COMPREPLY=($(compgen -c -- "${cur}"))
  # elif [ "$ARRAY" != "" ]; then
  #   COMPREPLY=($(compgen -W '${ARRAY}' -- "${cur}"))
  # elif [ -n "$OPTS" ]; then
  #   COMPREPLY=($(compgen -W '${OPTS}' -- "${cur}"))
  # else
  #   COMPREPLY=($(compgen -W '${ARRAY}' -- "${cur}"))
  # elif [ $cword -gt 2 ]; then
  #   return
  # elif [ $cword == 2 ]; then
  #   _filedir
  #   compopt -o nospace
  #   return
  # elif [ $cword -eq 1 ]; then
  #   COMPREPLY=($(compgen -W '{a..z}{a..z}' -- "${cur}"))
  #   compopt -o nospace
  #   return
  # fi
  # [ ${cword} == 2 ] && _filedir && compopt -o nospace
  # [ $COMP_CWORD -eq 2 ] && COMPREPLY=($(compgen -W '{a..z} {A..Z} {0..9}' -o nospace -- "${cur}"))
  # [ $COMP_CWORD -eq 3 ] && COMPREPLY=($(compgen -W '$(_filedir)' -o filenames -o dirnames -- "${cur}"))
  # [ $COMP_CWORD -gt 3 ] && COMPREPLY=($(compgen -W '' -- "${cur}"))
  # prev=""
  # compopt -o nospace
} &&
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # enable completions
  complete -F _search-menu_completion -o default search-menu

# ex: ts=2 sw=2 et filetype=sh
