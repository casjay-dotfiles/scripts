#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version           :  202207081016-git
# @Author            :  Jason Hempstead
# @Contact           :  jason@casjaysdev.pro
# @License           :  WTFPL
# @ReadME            :  tmux-new --help
# @Copyright         :  Copyright: (c) 2022 Jason Hempstead, Casjays Developments
# @Created           :  Friday, Jul 08, 2022 10:16 EDT
# @File              :  tmux-new
# @Description       :
# @TODO              :
# @Other             :
# @Resource          :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -'
_tmux-new() {
  ___findcmd() { find -L "${1:-$SEARCHDIR/}" -maxdepth ${3:-3} -type ${2:-f} 2>/dev/null | sed 's#'${1:-$CONFDIR}'##g' | grep '^' || return 1; }
  local CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
  local cur prev words cword opts split
  local cur="${COMP_WORDS[$COMP_CWORD]}"
  local prev="${COMP_WORDS[$COMP_CWORD - 1]}"
  local CONFFILE="settings.conf"
  local SEARCHDIR="$HOME/.config/myscripts/tmux-new"
  local SEARCHCMD="$(___findcmd "$SEARCHDIR/conf/" "f" "1" | sort -u)"
  local SHOW_COMP_OPTS=""
  local FILEDIR=""
  local OPTS=""
  local LONGOPTS="--completions --config --debug --dir --help --options --raw --version --silent --kill --name --socket"
  local SHORTOPTS=""
  local ARRAY="kill clean list attach single shell server web docker dev rpm node bun deno build ssh productivity test default edit create"
  local LAUNCH="single shell server web docker dev rpm node bun deno build ssh productivity test default"
  local lotmux_ls="$(tmux ls 2>/dev/null | awk -F':' '{print $1}' | grep -vE '^$|no session|no server running on' | grep '^')"
  local sockets="$(ls /tmp/tmux-$(id -u))"
  _init_completion || return

  if [[ "$SHOW_COMP_OPTS" != "" ]]; then
    local SHOW_COMP_OPTS_SEP="${SHOW_COMP_OPTS//,/ }"
    compopt -o $SHOW_COMP_OPTS_SEP
  fi

  if [[ ${cur} == -* ]]; then
    COMPREPLY=($(compgen -W '${LONGOPTS}' -- ${cur}))
    return
  else
    case "${COMP_WORDS[1]:-$prev}" in
    --options)
      shift 1
      local prev="--options"
      COMPREPLY=($(compgen -W '' -- "${cur}"))
      ;;

    --config)
      shift 1
      local prev="--config"
      COMPREPLY=($(compgen -W '' -- "${cur}"))
      ;;

    --help)
      shift 1
      prev="--help"
      COMPREPLY=($(compgen -W '' -- "${cur}"))
      ;;

    --version)
      shift 1
      local prev="--version"
      COMPREPLY=($(compgen -W '' -- "${cur}"))
      ;;

    --completions)
      shift 1
      local prev="--completions"
      COMPREPLY=($(compgen -W 'short long array list' -- "${cur}"))
      ;;

    --dir)
      shift 1
      local prev="dir"
      _filedir
      return
      ;;
    --socket)
      local prev="--socket"
      COMPREPLY=($(compgen -W '${sockets}' -- "${cur}"))
      ;;

    list | ls)
      shift 1
      local prev="ls"
      COMPREPLY=($(compgen -W '' -- "${cur}"))
      ;;
    attach | a)
      COMPREPLY=($(compgen -W '$(echo ${tmux_ls})' -- "${cur}"))
      ;;
    create)
      COMPREPLY=($(compgen -W '$(echo {a..z})' -- "${cur}"))
      ;;
    edit)
      [ $COMP_CWORD -eq 2 ] && COMPREPLY=($(compgen -W '${SEARCHCMD}' -- "${cur}")) || COMPREPLY=($(compgen -W '' -- "${cur}"))
      ;;
    *)
      COMPREPLY=($(compgen -W '${ARRAY} ${LAUNCH}' -- "${cur}"))
      compopt -o nospace
      ;;
    esac
  fi
  $split && return
} &&
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # enable completions
  complete -F _tmux-new tmux-new
