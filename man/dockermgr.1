.\" Manpage for dockermgr
.TH man 1 "16 September 2025" "202509160035-git" "dockermgr"

.SH NAME
dockermgr \- Comprehensive Docker container management and orchestration tool

.SH DESCRIPTION
A powerful command-line tool for managing Docker containers, images, and orchestration platforms. Provides lifecycle management, preconfigured application deployment, Kubernetes integration, and Docker Hub API access.

.SH SYNOPSIS
dockermgr [options] [command] [arguments...]

.SH CONTAINER MANAGEMENT COMMANDS
.TP
.B run <image>
Run a Docker container from the specified image with interactive access
.TP
.B test <image>
Test a Docker image by running it temporarily with mounted volumes
.TP
.B exec <container> <command>
Execute a command in a running container
.TP
.B enter <container>
Enter a container with an interactive shell
.TP
.B connect <container>
Connect to a running container (auto-detects if none specified)
.TP
.B attach <container>
Attach to a running container's main process
.TP
.B rm <container>
Remove a container (supports --all flag)
.TP
.B ps [filter]
Show running containers with optional filtering
.TP
.B rmi <image>
Remove Docker images (supports prune, force, all, unnamed options)
.TP
.B restart <container>
Restart one or more containers
.TP
.B tag <from> <to>
Tag a Docker image with a new name
.TP
.B pull [image]
Pull Docker images (updates all if no image specified)
.TP
.B prune [unnamed]
Clean up Docker system or remove unnamed/untagged images

.SH SYSTEM MANAGEMENT COMMANDS
.TP
.B init [force]
Initialize dockermgr and install Docker using package manager (secure installation)
.TP
.B status
Show Docker daemon status and listening sockets
.TP
.B active
Show active (running) containers
.TP
.B inactive
Show inactive (stopped) containers  
.TP
.B network [network-name]
Show Docker network information and container IPs
.TP
.B log <container>
Show and follow container logs
.TP
.B service
Update Docker systemd service configuration
.TP
.B swarm
Initialize Docker swarm mode with current host
.TP
.B health [healthy|unhealthy|container]
Check container health status
.TP
.B proxy
Setup Docker proxy container

.SH ORCHESTRATION COMMANDS
.TP
.B minikube [init|delete|dashboard|services]
Install and manage Minikube for local Kubernetes development
.TP
.B k3b
Install K3s lightweight Kubernetes distribution
.TP
.B rancher
Install Rancher container management platform
.TP
.B helm
Install Helm package manager for Kubernetes
.TP
.B ds
Install DockStarter for media server containers
.TP
.B multiarch
Setup multi-architecture building with QEMU emulation
.TP
.B compose [update]
Install or update Docker Compose

.SH APPLICATION MANAGEMENT COMMANDS
.TP
.B list
List preconfigured installation scripts
.TP
.B available [sources]
Show all available installation scripts from repository or source repositories
.TP
.B search <term>
Search for preconfigured installation scripts
.TP
.B install <app> [--all]
Install application via preconfigured installation script
.TP
.B update [app]
Update preconfigured installation scripts (all if no app specified)
.TP
.B download|clone [src] <repo>
Download Docker configuration repository or source repository
.TP
.B remove <app> [--all]
Remove Docker application and its data
.TP
.B cron [add|remove|run]
Manage automatic Docker image updates via cron
.TP
.B version <app>
Show version information for installed applications

.SH API COMMANDS
.TP
.B api auth [username] [password]
Authenticate with Docker Hub API and store credentials securely
.TP
.B api list [username]
List repositories for a Docker Hub user or organization
.TP
.B api info <org/repo>
Get detailed repository information from Docker Hub
.TP
.B api delete <org/repo>
Delete a repository from Docker Hub
.TP
.B api sources [name|url|all]
List available source repositories
.TP
.B api readme <file> <org> <repo>
Upload README file to Docker Hub repository

.SH OPTIONS
.TP
.B \-\-force
Force operations, bypass safety checks and reinstall Docker
.TP
.B \-\-all
Apply operations to all applicable items
.TP
.B \-\-dir <directory>
Set working directory
.TP
.B \-p <port:port>
Set port mapping for containers (comma-separated for multiple)
.TP
.B \-v <host:container>
Set volume mounts for containers
.TP
.B \-e <VAR=value>
Set environment variables for containers
.TP
.B \-\-platform <platform>
Set platform for multi-architecture support
.TP
.B \-\-network <network>
Specify Docker network for containers
.TP
.B \-\-name <name>
Set custom container name
.TP
.B \-\-interactive
Run containers in interactive mode
.TP
.B \-\-help
Display comprehensive help message
.TP
.B \-\-version
Display current version and information
.TP
.B \-\-config
Generate user configuration file
.TP
.B \-\-options
Show all available options
.TP
.B \-\-debug
Enable debugging output
.TP
.B \-\-raw
Remove all formatting from output

.SH EXAMPLES
.TP
.B dockermgr init
Initialize Docker environment and install if needed
.TP
.B dockermgr run nginx
Run an nginx container
.TP
.B dockermgr ps
Show all running containers
.TP
.B dockermgr enter myapp
Enter the 'myapp' container with interactive shell
.TP
.B dockermgr install portainer
Install Portainer using preconfigured script
.TP
.B dockermgr search database
Search for database-related container scripts
.TP
.B dockermgr k3b
Install K3s Kubernetes cluster
.TP
.B dockermgr api list casjaysdevdocker
List all repositories for casjaysdevdocker user

.SH PRECONFIGURED APPLICATIONS
dockermgr includes preconfigured installation scripts for popular applications:
.TP
.B Development Tools
Portainer, Adminer, PHPMyAdmin, Redis Commander
.TP
.B Media Servers
Plex, Jellyfin, Emby, Sonarr, Radarr
.TP
.B Productivity
NextCloud, WordPress, Ghost, GitLab
.TP
.B Monitoring
Grafana, Prometheus, InfluxDB, Elasticsearch
.TP
.B Databases
PostgreSQL, MySQL, MongoDB, Redis

.SH KUBERNETES INTEGRATION
.TP
.B Minikube
Local Kubernetes development environment
.TP
.B K3s
Lightweight Kubernetes for production and edge
.TP
.B Rancher
Enterprise container management platform
.TP
.B Helm
Package manager for Kubernetes applications

.SH CONFIGURATION
.TP
.B Default Registry
Uses casjaysdevdocker organization for preconfigured containers
.TP
.B Watchtower Integration
Optional automatic container updates
.TP
.B Custom Repositories
Supports custom GitHub repositories for application scripts

.SH FILES
.TP
.I ~/.config/myscripts/dockermgr/settings.conf
User configuration file with defaults and credentials
.TP
.I ~/Projects/github/dockermgr/
Default clone directory for dockermgr repositories
.TP
.I ~/.local/log/dockermgr/
Log directory for installation and operation logs

.SH ENVIRONMENT VARIABLES
.TP
.B DOCKERMGR_GIT_REPO
Repository URL for dockermgr scripts (default: https://github.com/dockermgr)
.TP
.B DOCKERMGR_REGISTRY_USERNAME
Docker registry username (default: casjaysdevdocker)
.TP
.B DOCKERMGR_DOCKER_BIN
Docker command to use (default: sudo -HE docker)

.SH SECURITY CONSIDERATIONS
.TP
.B Secure Installation
Uses official package managers only - no curl|sh installations
.TP
.B Repository Management
Checks for existing repositories to prevent conflicts
.TP
.B Privilege Management
Uses sudo for Docker operations when required
.TP
.B Credential Storage
Stores Docker Hub credentials securely in user config with 600 permissions
.TP
.B Container Isolation
Follows Docker security best practices for container isolation
.TP
.B GPG Verification
Verifies package signatures when installing from official repositories

.SH REQUIREMENTS
.TP
.B Docker Engine
Docker must be installed and running
.TP
.B Internet Access
Required for downloading images and installation scripts
.TP
.B Git
Required for cloning application repositories

.SH NOTES
dockermgr simplifies Docker container management by providing preconfigured installation scripts for popular applications. It integrates with Kubernetes orchestration tools and provides comprehensive container lifecycle management.

.SH LICENSE
WTFPL

.SH BUGS
No known bugs.

.SH REPORTING BUGS
https://github.com/casjay-dotfiles/issues

.SH AUTHOR
Currently maintained by Jason Hempstead <jason@casjaysdev.pro>