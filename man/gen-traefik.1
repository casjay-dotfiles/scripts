.\" Manpage for gen-traefik
.TH man 1 "16 September 2025" "202509152129-git" "gen-traefik"

.SH NAME
gen-traefik \- Generate Traefik host configurations for reverse proxy setups

.SH DESCRIPTION
A tool for generating Traefik v2 dynamic configuration files for reverse proxy setups. Creates YAML configuration files for HTTP and HTTPS routing with automatic SSL certificate management, perfect for Docker containers and microservices.

.SH SYNOPSIS
gen-traefik [options] [domain]

.SH COMMANDS
.TP
.B list
List all configured Traefik services and their domains

.TP
.B domain.com
Create a new Traefik service configuration for the specified domain

.SH OPTIONS
.TP
.B \-\-template <template>
Choose configuration template: 'ssl' for HTTPS with automatic certificates, 'standard' for HTTP-only
.TP
.B \-\-ssl <yes|no>
Enable or disable SSL/HTTPS support for the domain
.TP
.B \-\-dir <directory>
Set working directory for configuration files
.TP
.B \-\-help
Display help message and usage information
.TP
.B \-\-version
Display current version
.TP
.B \-\-config
Generate user configuration file
.TP
.B \-\-options
Show all available options
.TP
.B \-\-debug
Enable debugging output
.TP
.B \-\-raw
Remove all formatting from output
.TP
.B \-\-silent
Suppress non-error output

.SH EXAMPLES
.TP
.B gen-traefik myapp.localhost
Create a basic HTTP configuration for myapp.localhost
.TP
.B gen-traefik \-\-ssl yes api.example.com
Create an HTTPS configuration with Let's Encrypt for api.example.com
.TP
.B gen-traefik \-\-template ssl webapp.mydomain.com
Create SSL configuration using the ssl template
.TP
.B gen-traefik list
Show all configured services and their domains

.SH INTERACTIVE CONFIGURATION
When creating a new configuration, gen-traefik will prompt for:

.TP
.B Domain name
The hostname that Traefik should route (e.g., myapp.localhost, api.example.com)
.TP
.B SSL support
Whether to enable HTTPS with automatic Let's Encrypt certificates
.TP
.B Backend URL
The internal service URL (e.g., http://localhost:3000, http://docker-container:8080)
.TP
.B Document root
Local directory for static files (if serving static content)
.TP
.B Configuration directory
Where to store the generated Traefik configuration files

.SH CONFIGURATION FILES
Generated configurations are stored as YAML files that Traefik's file provider can watch for changes.

.SS HTTP Configuration (standard template)
Creates a basic HTTP router that forwards requests to the backend service.

.SS HTTPS Configuration (ssl template)  
Creates both HTTP and HTTPS routers with:
- Automatic Let's Encrypt certificate resolver
- HTTP to HTTPS redirect middleware
- TLS termination at Traefik

.SH TRAEFIK INTEGRATION
The generated configuration files are designed to work with Traefik v2's file provider:

.nf
# traefik.yml
providers:
  file:
    directory: /path/to/dynamic/configs
    watch: true
.fi

.SH DOCKER USAGE
Perfect for containerized applications:

.TP
.B Docker Compose Service
gen-traefik myapp.localhost
.br
Backend URL: http://myapp-container:3000

.TP
.B Kubernetes Service  
gen-traefik \-\-ssl yes k8s-app.example.com
.br
Backend URL: http://k8s-service:80

.TP
.B Local Development
gen-traefik dev-app.localhost
.br
Backend URL: http://localhost:8080

.SH FILES
.TP
.I ~/.config/myscripts/gen-traefik/settings.conf
User configuration file with customizable defaults
.TP
.I ~/.config/myscripts/gen-traefik/files/vhosts/
Default directory for generated Traefik configuration files
.TP
.I ~/.config/myscripts/gen-traefik/files/www/
Default document root for static files

.SH CONFIGURATION STRUCTURE
Generated YAML files follow Traefik v2 format:

.nf
http:
  routers:
    service-name:
      rule: "Host(`domain.com`)"
      service: "service-name"
      entryPoints: ["web"]
  
  services:
    service-name:
      loadBalancer:
        servers:
          - url: "http://backend:port"
.fi

.SH CERTIFICATE MANAGEMENT
When using SSL template:
- Automatic Let's Encrypt certificate generation
- Certificate storage in Traefik's acme.json
- Automatic renewal handled by Traefik
- HTTP to HTTPS redirects

.SH LOAD BALANCING
Generated configurations support:
- Multiple backend servers (edit YAML manually)
- Health checks (configure in Traefik)
- Sticky sessions (configure in Traefik)

.SH MIDDLEWARE SUPPORT
SSL configurations include:
- HTTP to HTTPS redirect middleware
- Can be extended with custom middleware (edit YAML)

.SH NOTES
- Configurations are immediately picked up by Traefik's file watcher
- Domain names should match your DNS configuration
- Backend URLs should be accessible from Traefik container/process
- For Docker, use container names or service names as hostnames

.SH RELATED TOOLS
.TP
.B gen-apache
Generate Apache virtual host configurations
.TP
.B gen-nginx  
Generate Nginx server block configurations
.TP
.B gen-caddy
Generate Caddy server configurations

.SH LICENSE
LICENSE.md

.SH BUGS
No known bugs.

.SH REPORTING BUGS
https://github.com/casjay-dotfiles/issues

.SH AUTHOR
Currently maintained by Jason Hempstead <jason@casjaysdev.pro>
