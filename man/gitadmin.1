.\" Manpage for gitadmin
.TH man 1 "10 October 2025" "202510100059-git" "gitadmin"

.SH NAME
gitadmin \- Comprehensive Git repository management across multiple platforms

.SH DESCRIPTION
A powerful command-line tool for managing Git repositories across multiple platforms including GitHub, GitLab, Gitea, Forgejo, Codeberg, Gogs, Bitbucket, Azure DevOps, and AWS CodeCommit. Provides unified repository operations, bulk management, and API integration for enterprise and personal Git workflows.

.SH SYNOPSIS
gitadmin [options] [command] [arguments...]

.SH REPOSITORY MANAGEMENT COMMANDS
.TP
.B init [--automated]
Initialize a git repository with standard configuration
.TP
.B setup [--automated]
Setup git repository with proper configuration and hooks
.TP
.B clone <url|org/repo>
Clone a repository from any supported Git platform
.TP
.B create <reponame> [--platform <provider>] [--private|--public] [--description <desc>]
Create a new repository on specified platform (GitHub, GitLab, Gitea, etc.)
.TP
.B delete <reponame> [--platform <provider>]
Delete a repository from specified platform
.TP
.B modify <reponame> [--description <desc>] [--homepage <url>] [--private|--public]
Modify repository settings on remote platform
.TP
.B status
Show git status for current repository
.TP
.B commit <message>
Commit changes with specified message
.TP
.B push [directory]
Push changes to remote repository
.TP
.B pull [directory]
Pull changes from remote repository
.TP
.B update [--while]
Update repository with remote changes
.TP
.B reset
Reset repository to clean state
.TP
.B merge
Merge branches in repository
.TP
.B rebase
Rebase current branch
.TP
.B diff
Show differences in repository

.SH BRANCH MANAGEMENT COMMANDS
.TP
.B branch rename <old> <new>
Rename a git branch
.TP
.B switch [create] <branch>
Switch to a branch or create and switch
.TP
.B squash [head|merge|rebase]
Squash commits using specified method

.SH REMOTE MANAGEMENT COMMANDS
.TP
.B remote show
Show remote repository information
.TP
.B remote add <name> <url>
Add a remote repository

.SH ORGANIZATION/USER MANAGEMENT COMMANDS
.TP
.B org repos <org>
List all repositories for an organization
.TP
.B org all
List all organizations for authenticated user
.TP
.B org push <org/directory>
Push all repositories in organization directory
.TP
.B org pull <org/directory>
Pull all repositories in organization directory
.TP
.B org clone <org>
Clone all repositories from an organization
.TP
.B user orgs [username]
List organizations for a user
.TP
.B user clone <username>
Clone all public repositories for a user

.SH GIT LFS COMMANDS
.TP
.B lfs init
Initialize Git Large File Storage
.TP
.B lfs add <pattern>
Add file pattern to LFS tracking
.TP
.B lfs fetch
Fetch LFS objects
.TP
.B lfs checkout
Checkout LFS files
.TP
.B lfs pull
Pull LFS objects
.TP
.B lfs clone <url>
Clone repository with LFS support

.SH PLATFORM-SPECIFIC COMMANDS

.SS GitHub Commands
.TP
.B github init
Initialize GitHub repository
.TP
.B github clone <org>
Clone all repositories from GitHub organization
.TP
.B github push <org>
Push all repositories in GitHub organization directory
.TP
.B github pull <org>
Pull all repositories in GitHub organization directory
.TP
.B github user clone <username>
Clone all repositories for GitHub user
.TP
.B github org all <username>
Clone all organizations owned by GitHub user
.TP
.B github remote
Setup GitHub remote
.TP
.B github update description=<desc> homepage=<url> visibility=<public|private>
Update GitHub repository settings

.SS GitLab Commands
.TP
.B gitlab init
Initialize GitLab repository
.TP
.B gitlab clone <group>
Clone all repositories from GitLab group
.TP
.B gitlab push <group>
Push all repositories in GitLab group directory
.TP
.B gitlab pull <group>
Pull all repositories in GitLab group directory
.TP
.B gitlab remote
Setup GitLab remote
.TP
.B gitlab repos <group>
List all repositories in GitLab group

.SS Bitbucket Commands
.TP
.B bitbucket clone <workspace>
Clone all repositories from Bitbucket workspace
.TP
.B bitbucket push <workspace>
Push all repositories in Bitbucket workspace directory
.TP
.B bitbucket pull <workspace>
Pull all repositories in Bitbucket workspace directory
.TP
.B bitbucket user clone <username>
Clone all repositories for Bitbucket user
.TP
.B bitbucket org all <username>
Clone all workspaces owned by Bitbucket user

.SS Codeberg Commands
.TP
.B codeberg clone <owner>
Clone all repositories from Codeberg owner
.TP
.B codeberg push <owner>
Push all repositories in Codeberg owner directory
.TP
.B codeberg pull <owner>
Pull all repositories in Codeberg owner directory
.TP
.B codeberg user clone <username>
Clone all repositories for Codeberg user
.TP
.B codeberg org all <username>
Clone all organizations owned by Codeberg user

.SS Forgejo Commands
.TP
.B forgejo clone <owner>
Clone all repositories from Forgejo owner
.TP
.B forgejo push <owner>
Push all repositories in Forgejo owner directory
.TP
.B forgejo pull <owner>
Pull all repositories in Forgejo owner directory
.TP
.B forgejo user clone <username>
Clone all repositories for Forgejo user
.TP
.B forgejo org all <username>
Clone all organizations owned by Forgejo user

.SS Gitea Commands
.TP
.B gitea clone <owner>
Clone all repositories from Gitea owner
.TP
.B gitea push <owner>
Push all repositories in Gitea owner directory
.TP
.B gitea pull <owner>
Pull all repositories in Gitea owner directory
.TP
.B gitea user clone <username>
Clone all repositories for Gitea user
.TP
.B gitea org all <username>
Clone all organizations owned by Gitea user

.SS Gogs Commands
.TP
.B gogs clone <owner>
Clone all repositories from Gogs owner
.TP
.B gogs push <owner>
Push all repositories in Gogs owner directory
.TP
.B gogs pull <owner>
Pull all repositories in Gogs owner directory
.TP
.B gogs user clone <username>
Clone all repositories for Gogs user
.TP
.B gogs org all <username>
Clone all organizations owned by Gogs user

.SS Azure DevOps Commands
.TP
.B azure clone <project>
Clone all repositories from Azure DevOps project
.TP
.B azure push <project>
Push all repositories in Azure DevOps project directory
.TP
.B azure pull <project>
Pull all repositories in Azure DevOps project directory
.TP
.B azure org all <organization>
Clone all projects in Azure DevOps organization

.SS AWS CodeCommit Commands
.TP
.B aws clone [region]
Clone all repositories from AWS CodeCommit region
.TP
.B aws push [region]
Push all repositories in AWS CodeCommit region directory
.TP
.B aws pull [region]
Pull all repositories in AWS CodeCommit region directory

.SH ISSUE MANAGEMENT COMMANDS
.TP
.B issues count <user/repo>
Count issues in a repository
.TP
.B issues list <user/repo>
List issues in a repository
.TP
.B issues create <user> <repo> <title> <body>
Create a new issue
.TP
.B issues edit <number> <user> <repo> <title> <body>
Edit an existing issue
.TP
.B issues delete <number> <user/repo>
Delete an issue (not yet implemented)

.SH GIST COMMANDS
.TP
.B gist clone <gist-id>
Clone a GitHub gist
.TP
.B gist create <file>
Create a new gist
.TP
.B gist list
List your gists
.TP
.B gist search <query>
Search for gists
.TP
.B gist edit <gist-id>
Edit an existing gist
.TP
.B gist delete <gist-id>
Delete a gist

.SH UTILITY COMMANDS
.TP
.B list
List available git operations
.TP
.B is clean
Check if repository is clean (no uncommitted changes)
.TP
.B is dirty
Check if repository has uncommitted changes
.TP
.B web [repo]
Open repository web page in browser
.TP
.B shorten <url>
Shorten a URL using git.io service
.TP
.B project <directory>
Operate on specific project directory
.TP
.B cron [add|remove|run]
Manage automatic repository updates via cron

.SH OPTIONS
.TP
.B \-\-platform <provider>
Specify platform (github, gitlab, gitea, forgejo, codeberg, gogs, bitbucket, azure, aws)
.TP
.B \-\-github
Use GitHub as platform
.TP
.B \-\-gitlab
Use GitLab as platform
.TP
.B \-\-gitea
Use Gitea as platform
.TP
.B \-\-private
Create private repository
.TP
.B \-\-public
Create public repository
.TP
.B \-\-description <text>
Set repository description
.TP
.B \-\-homepage <url>
Set repository homepage URL
.TP
.B \-\-issues <true|false>
Enable or disable issues
.TP
.B \-\-wiki <true|false>
Enable or disable wiki
.TP
.B \-\-projects <true|false>
Enable or disable projects
.TP
.B \-\-default-branch <name>
Set default branch name
.TP
.B \-\-type <all|public|private|forks|sources|member>
Filter repository type
.TP
.B \-\-visible <yes|no>
Set repository visibility
.TP
.B \-\-all
Apply operation to all applicable items
.TP
.B \-\-nolicense
Skip license file creation
.TP
.B \-\-noreadme
Skip README file creation
.TP
.B \-\-automated
Run in automated mode without prompts
.TP
.B \-\-nopush
Skip automatic push after operations
.TP
.B \-\-message <text>
Set commit message
.TP
.B \-\-dir <directory>
Set working directory
.TP
.B \-\-help
Display comprehensive help message
.TP
.B \-\-version
Display current version
.TP
.B \-\-config
Generate user configuration file
.TP
.B \-\-options
Show all available options
.TP
.B \-\-debug
Enable debugging output
.TP
.B \-\-raw
Remove all formatting from output
.TP
.B \-\-silent
Suppress output messages

.SH EXAMPLES
.TP
.B gitadmin init
Initialize a new git repository
.TP
.B gitadmin create myproject --platform github --private
Create a private repository on GitHub
.TP
.B gitadmin github clone myorg
Clone all repositories from GitHub organization
.TP
.B gitadmin github org all username
Clone all organizations and their repos for a GitHub user
.TP
.B gitadmin gitea clone myorg
Clone all repositories from Gitea organization
.TP
.B gitadmin bitbucket user clone username
Clone all Bitbucket repositories for a user
.TP
.B gitadmin modify myrepo --description "New description" --homepage "https://example.com"
Modify repository settings
.TP
.B gitadmin org push ~/Projects/github/myorg
Push all repositories in organization directory
.TP
.B gitadmin issues list username/repo
List issues for a repository
.TP
.B gitadmin lfs init
Initialize Git LFS for current repository
.TP
.B gitadmin azure clone myproject
Clone all repositories from Azure DevOps project
.TP
.B gitadmin branch rename old-name new-name
Rename a git branch

.SH SUPPORTED PLATFORMS
gitadmin supports comprehensive repository management across:
.TP
.B GitHub
Public and private repositories, organizations, user repos, gists
.TP
.B GitLab
Groups, projects, self-hosted instances
.TP
.B Gitea
Organizations, users, repositories on self-hosted instances
.TP
.B Forgejo
Organizations, users, repositories (Gitea fork)
.TP
.B Codeberg
Organizations, users, repositories (public Forgejo instance)
.TP
.B Gogs
Organizations, users, repositories on self-hosted instances
.TP
.B Bitbucket
Workspaces, projects, repositories (Cloud and Server)
.TP
.B Azure DevOps
Organizations, projects, repositories
.TP
.B AWS CodeCommit
Regional repositories via AWS CLI

.SH CONFIGURATION
.TP
.B Authentication
Requires API tokens for each platform stored in settings.conf
.TP
.B Directory Structure
Repositories organized by platform: ~/Projects/{platform}/{org}/{repo}
.TP
.B Custom Defaults
Configure default platform, username, organization in settings

.SH FILES
.TP
.I ~/.config/myscripts/gitadmin/settings.conf
User configuration file with API tokens and defaults
.TP
.I ~/Projects/github/
Default directory for GitHub repositories
.TP
.I ~/Projects/gitlab/
Default directory for GitLab repositories
.TP
.I ~/Projects/gitea/
Default directory for Gitea repositories
.TP
.I ~/Projects/bitbucket/
Default directory for Bitbucket repositories
.TP
.I ~/Projects/codeberg/
Default directory for Codeberg repositories
.TP
.I ~/Projects/forgejo/
Default directory for Forgejo repositories
.TP
.I ~/Projects/gogs/
Default directory for Gogs repositories
.TP
.I ~/Projects/azure/
Default directory for Azure DevOps repositories
.TP
.I ~/Projects/aws/
Default directory for AWS CodeCommit repositories
.TP
.I ~/.local/log/gitadmin/
Log directory for operation logs

.SH ENVIRONMENT VARIABLES
.TP
.B GITADMIN_DEFAULT_USERNAME
Default username for Git operations
.TP
.B GITADMIN_DEFAULT_ORG
Default organization name
.TP
.B GITADMIN_DEFAULT_PLATFORM
Default platform (github, gitlab, gitea, etc.)
.TP
.B GITADMIN_DEFAULT_PROJECT_DIR
Base directory for all projects (default: ~/Projects)
.TP
.B GITADMIN_DEFAULT_GIT_DIR_GITHUB
GitHub repositories directory
.TP
.B GITADMIN_DEFAULT_GIT_DIR_GITLAB
GitLab repositories directory
.TP
.B GITADMIN_DEFAULT_GIT_DIR_GITEA
Gitea repositories directory
.TP
.B GITADMIN_DEFAULT_GIT_DIR_FORGEJO
Forgejo repositories directory
.TP
.B GITADMIN_DEFAULT_GIT_DIR_CODEBERG
Codeberg repositories directory
.TP
.B GITADMIN_DEFAULT_GIT_DIR_GOGS
Gogs repositories directory
.TP
.B GITADMIN_DEFAULT_GIT_DIR_BITBUCKET
Bitbucket repositories directory
.TP
.B GITADMIN_DEFAULT_GIT_DIR_AZURE
Azure DevOps repositories directory
.TP
.B GITADMIN_DEFAULT_GIT_DIR_AWS
AWS CodeCommit repositories directory
.TP
.B GITADMIN_GH_API_TOKEN
GitHub API token for authentication
.TP
.B GITADMIN_GL_API_TOKEN
GitLab API token for authentication
.TP
.B GITADMIN_GITEA_API_TOKEN
Gitea API token for authentication
.TP
.B GITADMIN_FORGEJO_API_TOKEN
Forgejo API token for authentication
.TP
.B GITADMIN_CODEBERG_API_TOKEN
Codeberg API token for authentication
.TP
.B GITADMIN_GOGS_API_TOKEN
Gogs API token for authentication
.TP
.B GITADMIN_BITBUCKET_USERNAME
Bitbucket username
.TP
.B GITADMIN_BITBUCKET_APP_PASSWORD
Bitbucket app password for authentication
.TP
.B GITADMIN_AZURE_TOKEN
Azure DevOps personal access token
.TP
.B GITADMIN_AWS_REGION
AWS region for CodeCommit operations

.SH SECURITY CONSIDERATIONS
.TP
.B API Token Storage
Stores platform API tokens securely in user config with 600 permissions
.TP
.B Credential Management
Uses platform-specific authentication methods (tokens, app passwords, AWS credentials)
.TP
.B HTTPS by Default
All clones use HTTPS with token authentication
.TP
.B SSH Support
Supports SSH URLs when configured in platform settings
.TP
.B Token Validation
Validates API tokens before performing operations
.TP
.B Rate Limiting
Respects API rate limits for each platform

.SH BULK OPERATIONS
gitadmin excels at bulk repository management:
.TP
.B Organization Clone
Clone all repositories from any organization across all platforms
.TP
.B Bulk Push/Pull
Push or pull changes across all repositories in a directory
.TP
.B Cross-Platform Migration
Clone from one platform, push to another
.TP
.B Automated Updates
Schedule automated repository updates via cron
.TP
.B Multi-Organization Support
Manage repositories across multiple organizations simultaneously

.SH REQUIREMENTS
.TP
.B Git
Git must be installed and accessible
.TP
.B curl
Required for API operations
.TP
.B jq
Required for JSON parsing
.TP
.B Internet Access
Required for API operations and remote operations
.TP
.B Platform Accounts
Accounts and API tokens for each platform you use
.TP
.B AWS CLI
Required for AWS CodeCommit operations (optional)

.SH NOTES
gitadmin provides unified repository management across 9 major Git platforms, enabling seamless multi-platform workflows. It supports organization-level operations, bulk management, and automated workflows while maintaining consistent command patterns across all platforms.

The tool automatically handles platform-specific API differences, authentication methods, and directory structures, providing a single unified interface for all Git operations.

.SH LICENSE
WTFPL

.SH BUGS
No known bugs.

.SH REPORTING BUGS
https://github.com/casjay-dotfiles/scripts/issues

.SH AUTHOR
Currently maintained by Jason Hempstead <jason@casjaysdev.pro>
