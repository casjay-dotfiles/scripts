cat <<EOF
FROM scratch
ARG TZ
ARG PATH
ARG USER
ARG TIMEZONE
ARG LANGUAGE
ARG IMAGE_NAME
ARG BUILD_DATE
ARG SERVICE_PORT
ARG EXPOSE_PORTS
ARG BUILD_VERSION
ARG IMAGE_VERSION
ARG WWW_ROOT_DIR
ARG DEFAULT_FILE_DIR
ARG DEFAULT_DATA_DIR
ARG DEFAULT_CONF_DIR
ARG DEFAULT_TEMPLATE_DIR
ARG DISTRO_VERSION
ARG NODE_VERSION
ARG NODE_MANAGER
ARG PHP_VERSION
ARG PHP_SERVER
ARG LICENSE="WTFPL"
ARG ENV_PORTS="\${EXPOSE_PORTS}"

USER \${USER}
WORKDIR /root

LABEL maintainer="${GEN_DOCKERFILE_MAINTAINER}"
LABEL org.opencontainers.image.vendor="${GEN_DOCKERFILE_VENDOR:-CasjaysDev}"
LABEL org.opencontainers.image.authors="${GEN_DOCKERFILE_AUTHOR:-CasjaysDev}"
LABEL org.opencontainers.image.description="Containerized version of \${IMAGE_NAME}"
LABEL org.opencontainers.image.title="\${IMAGE_NAME}"
LABEL org.opencontainers.image.base.name="\${IMAGE_NAME}"
LABEL org.opencontainers.image.authors="\${LICENSE}"
LABEL org.opencontainers.image.created="\${BUILD_DATE}"
LABEL org.opencontainers.image.version="\${BUILD_VERSION}"
LABEL org.opencontainers.image.schema-version="\${BUILD_VERSION}"
LABEL org.opencontainers.image.url="${GEN_DOCKERFILE_HUB_BASE}"
LABEL org.opencontainers.image.source="${GEN_DOCKERFILE_HUB_BASE}"
LABEL org.opencontainers.image.vcs-type="Git"
LABEL org.opencontainers.image.revision="\${BUILD_VERSION}"
LABEL org.opencontainers.image.source="${GEN_DOCKERFILE_GIT_BASE}"
LABEL org.opencontainers.image.documentation="${GEN_DOCKERFILE_GIT_BASE}"
LABEL com.github.containers.toolbox="false"

ENV ENV=~/.bashrc
ENV USER="\${USER}"
ENV PATH="\${PATH}"
ENV TZ="\${TIMEZONE}"
ENV SHELL="/bin/bash"
ENV TIMEZONE="\${TZ}"
ENV LANG="\${LANGUAGE}"
ENV TERM="xterm-256color"
ENV PORT="\${SERVICE_PORT}"
ENV ENV_PORTS="\${ENV_PORTS}"
ENV CONTAINER_NAME="\${IMAGE_NAME}"
ENV HOSTNAME="casjaysdev-\${IMAGE_NAME}"
ENV PHP_SERVER="\${PHP_SERVER}"
ENV NODE_VERSION="\${NODE_VERSION}"
ENV NODE_MANAGER="\${NODE_MANAGER}"
ENV PHP_VERSION="\${PHP_VERSION}"
ENV DISTRO_VERSION="\${IMAGE_VERSION}"
ENV WWW_ROOT_DIR="\${WWW_ROOT_DIR}"

COPY --from=build /. /

VOLUME [ "/config","/data" ]

EXPOSE \${SERVICE_PORT} \${ENV_PORTS}

STOPSIGNAL SIGRTMIN+3

CMD [ "tail", "-f", "/dev/null" ]
ENTRYPOINT [ "tini", "-p", "SIGTERM","--", "/usr/local/bin/entrypoint.sh" ]
HEALTHCHECK --start-period=10m --interval=5m --timeout=15s CMD [ "/usr/local/bin/entrypoint.sh", "healthcheck" ]

EOF
