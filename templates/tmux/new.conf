# Set environment
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.local/share/tmux/plugins/default'
# Override LC and LANG
set-environment -g LANG 'en_US.UTF-8'
set-environment -g LC_ALL 'en_US.UTF-8'
set-environment -g LC_CTYPE 'en_US.UTF-8'

# plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'jabirali/tmux-tilish'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'kristijanhusak/tmux-simple-git-status'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Set the prefix to Ctrl+Space
unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

# nested tmux, obey me
bind-key Space send-prefix

# set default shell
set -g default-command bash

# Dracula theme colors (modified for better readability)
# Background
color_bg="#282a36"
# Foreground
color_fg="#f8f8f2"
# Current line (lighter for readability)
color_current="#44475a"
# Selection
color_selection="#44475a"
# Comment
color_comment="#6272a4"
# Cyan
color_cyan="#8be9fd"
# Green
color_green="#50fa7b"
# Orange
color_orange="#ffb86c"
# Pink
color_pink="#ff79c6"
# Purple
color_purple="#bd93f9"
# Red
color_red="#ff5555"
# Yellow
color_yellow="#f1fa8c"

# Map to tmux color names
color_dark="$color_bg"
color_light="$color_fg"
color_session_text="$color_purple"
color_status_text="$color_fg"
color_main="$color_purple"
color_secondary="$color_pink"
color_level_ok="$color_green"
color_level_warn="$color_yellow"
color_level_stress="$color_red"
color_window_off_indicator="$color_red"
color_window_off_status_bg="$color_selection"
color_window_off_status_current_bg="$color_comment"

set-option -g mode-style "fg=$color_fg,bg=$color_selection"
set-option -g message-style "fg=$color_fg,bg=$color_selection"
set-option -g message-command-style "fg=$color_fg,bg=$color_selection"

# All kind of nice options
set-option -g   default-terminal "screen-256color"
set-option -ga  terminal-overrides ",xterm-256color:Tc"
set-option -g   history-limit 100000
set-option -g   repeat-time 500
set-option -g   terminal-overrides 'xterm*:smcup@:rmcup@'
set-option -ga  terminal-overrides ',xterm*:smcup@:rmcup@'
set-option -g   base-index 1
set-option -g   update-environment -r

# titles
set-option -g set-titles on
set-option -g set-titles-string "#T"

# Window options
set-option -g allow-rename on
set-option -g base-index 1
set-window-option -g pane-base-index 1
set-window-option -g renumber-windows on
set-window-option -g monitor-activity on
set-window-option -g xterm-keys on
set-window-option -g automatic-rename on
set-window-option -g aggressive-resize off

# Remap keys to my settings
unbind-key d        ; bind-key d        detach-client
unbind-key Tab      ; bind-key Tab      choose-tree -s
unbind-key BTab     ; bind-key BTab     choose-tree -Zw
unbind-key t        ; bind-key t        new-window
unbind-key `        ; bind-key `        last-window
unbind-key n        ; bind-key n        next-window
unbind-key p        ; bind-key p        previous-window

# Relocate all windows to another session
unbind-key r        ; bind-key r        command-prompt -p "Move all windows to session:" "run-shell \"tmux list-windows -F '#{window_index}' | xargs -I {} tmux move-window -s #{session_name}:{} -t '%%':\""

# Window selection
unbind-key 1        ; bind-key 1        select-window -t 1
unbind-key 2        ; bind-key 2        select-window -t 2
unbind-key 3        ; bind-key 3        select-window -t 3
unbind-key 4        ; bind-key 4        select-window -t 4
unbind-key 5        ; bind-key 5        select-window -t 5
unbind-key 6        ; bind-key 6        select-window -t 6
unbind-key 7        ; bind-key 7        select-window -t 7
unbind-key 8        ; bind-key 8        select-window -t 8
unbind-key 9        ; bind-key 9        select-window -t 9

# Window splitting
unbind-key \        ; bind-key \        split-window -c "#{pane_current_path}" -h
unbind-key /        ; bind-key /        split-window -c "#{pane_current_path}" -v

# Pane selection and resizing
unbind-key left     ; bind-key left     select-pane -L
unbind-key up       ; bind-key up       select-pane -U
unbind-key down     ; bind-key down     select-pane -D
unbind-key right    ; bind-key right    select-pane -R
unbind-key C-h      ; bind-key C-h      select-pane -L
unbind-key C-k      ; bind-key C-k      select-pane -U
unbind-key C-j      ; bind-key C-j      select-pane -D
unbind-key C-l      ; bind-key C-l      select-pane -R
unbind-key j        ; bind-key -r j     resize-pane -D 5
unbind-key k        ; bind-key -r k     resize-pane -U 5
unbind-key h        ; bind-key -r h     resize-pane -L 5
unbind-key l        ; bind-key -r l     resize-pane -R 5
unbind-key C-left   ; bind-key -r C-left    resize-pane -L 1
unbind-key C-right  ; bind-key -r C-right   resize-pane -R 1
unbind-key C-up     ; bind-key -r C-up  resize-pane -U 1
unbind-key C-down   ; bind-key -r C-down    resize-pane -D 1
unbind-key @        ; bind-key @        confirm-before kill-window
unbind-key ?        ; bind-key ?        display-popup -E -w 90% -h 90% "cat <<'TMUX_HELP' | less -R
╔══════════════════════════════════════════════════════════════════════════════╗
║                          TMUX KEYBINDINGS REFERENCE                          ║
╚══════════════════════════════════════════════════════════════════════════════╝

PREFIX: Ctrl+Space (or Ctrl+Space Space for nested tmux)

┌─ SESSION MANAGEMENT ──────────────────────────────────────────────────────────┐
│ PREFIX d           Detach from session                                        │
│ PREFIX \$           Rename current session                                     │
│ PREFIX Tab         Choose session from list (sessions only)                   │
│ PREFIX N           Create new single session (prompts for name)               │
└───────────────────────────────────────────────────────────────────────────────┘

┌─ WINDOW MANAGEMENT ───────────────────────────────────────────────────────────┐
│ PREFIX t           Create new window                                          │
│ PREFIX c           Create new window (retain current directory)               │
│ PREFIX n           Next window                                                │
│ PREFIX p           Previous window                                            │
│ PREFIX \`           Last window                                                │
│ PREFIX Shift+Tab   Choose window (current session only)                     │
│ PREFIX ,           Rename current window                                      │
│ PREFIX r           Relocate all windows to another session                   │
│ PREFIX @           Kill current window (with confirmation)                    │
│ PREFIX 1-9         Switch to window 1-9                                       │
│ Shift+Left         Previous window (no prefix)                                │
│ Shift+Right        Next window (no prefix)                                    │
└───────────────────────────────────────────────────────────────────────────────┘

┌─ PANE MANAGEMENT ─────────────────────────────────────────────────────────────┐
│ PREFIX \\           Split pane horizontally (retain current directory)        │
│ PREFIX /           Split pane vertically (retain current directory)           │
│ PREFIX ←↑↓→        Select pane (arrow keys)                                   │
│ PREFIX Ctrl+h/j/k/l Select pane (vim keys with Ctrl)                          │
│ PREFIX +           Zoom/unzoom pane                                           │
│ PREFIX w           Choose pane layout                                         │
│ PREFIX x           Kill current pane                                          │
│ Ctrl+h/j/k/l       Navigate panes (vim-tmux-navigator, no prefix)            │
└───────────────────────────────────────────────────────────────────────────────┘

┌─ PANE RESIZING ───────────────────────────────────────────────────────────────┐
│ PREFIX h           Resize pane left (5 units)                                 │
│ PREFIX j           Resize pane down (5 units)                                 │
│ PREFIX k           Resize pane up (5 units)                                   │
│ PREFIX l           Resize pane right (5 units)                                │
│ PREFIX Ctrl+←↑↓→   Resize pane 1 unit                                         │
└───────────────────────────────────────────────────────────────────────────────┘

┌─ COPY MODE & CLIPBOARD ───────────────────────────────────────────────────────┐
│ PREFIX [           Enter copy mode                                            │
│ PREFIX ]           Paste buffer                                               │
│ PREFIX Ctrl+v      Paste from system clipboard                                │
│ (in copy mode)                                                                │
│   Space            Begin selection                                            │
│   Enter            Copy selection                                             │
│   Ctrl+c           Copy to system clipboard                                   │
│   v                Begin selection (vim mode)                                 │
│   y                Copy selection (vim mode)                                  │
│   Mouse drag       Select and copy                                            │
└───────────────────────────────────────────────────────────────────────────────┘

┌─ SPECIAL FEATURES ────────────────────────────────────────────────────────────┐
│ PREFIX m           Toggle mouse mode on/off                                   │
│ PREFIX s           Toggle pane synchronization                                │
│ PREFIX t           Open file tree sidebar (plugin: tmux-sidebar)              │
│ PREFIX T           Focus file tree sidebar (plugin: tmux-sidebar)             │
│ PREFIX R           Reload tmux configuration                                  │
│ PREFIX Ctrl+s      Save session (plugin: tmux-resurrect)                      │
│ PREFIX Ctrl+r      Restore session (plugin: tmux-resurrect)                   │
│ PREFIX Ctrl+p      Send command to all panes                                  │
└───────────────────────────────────────────────────────────────────────────────┘

┌─ MOUSE SUPPORT ───────────────────────────────────────────────────────────────┐
│ Scroll             Scroll through history (natural scrolling)                 │
│ Click              Select pane                                                │
│ Drag border        Resize pane                                                │
│ Double-click       Select word                                                │
│ Right-click        Open context menu                                          │
└───────────────────────────────────────────────────────────────────────────────┘

Use arrow keys or j/k to scroll • Press 'q' to close
TMUX_HELP
"

# new window and retain cwd
bind-key c new-window -c "#{pane_current_path}"

# Set that stupid Esc-Wait off, so VI works again
set-option -sg  escape-time 0

# set mode either vi or emacs
set-window-option -g mode-keys vi

# Source setup file
bind-key R source-file TMUX_NEW_CONF_FILE_MAIN \; display-message 'Reloaded TMUX_NEW_CONF_FILE_MAIN'

# Create new single session
bind-key N command-prompt -p "New session name:" "run-shell 'tmux-new --dir \"#{pane_current_path}\" single %1 &>/dev/null &'"

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Clipboard integration
# For Linux (X11)
if-shell "command -v xclip" {
    bind-key -T copy-mode C-c send-keys -X copy-pipe-and-cancel "xclip -i -sel clipboard"
    bind-key -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -i -sel clipboard"
    bind-key C-v run "xclip -o -sel clipboard | tmux load-buffer - ; tmux paste-buffer"
}

# For Linux (Wayland)
if-shell "command -v wl-copy" {
    bind-key -T copy-mode C-c send-keys -X copy-pipe-and-cancel "wl-copy"
    bind-key -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "wl-copy"
    bind-key C-v run "wl-paste | tmux load-buffer - ; tmux paste-buffer"
}

# For macOS
if-shell "command -v pbcopy" {
    bind-key -T copy-mode C-c send-keys -X copy-pipe-and-cancel "pbcopy"
    bind-key -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
    bind-key C-v run "pbpaste | tmux load-buffer - ; tmux paste-buffer"
}

# copy/paste with tmux-yank plugin
set -g @yank_selection 'clipboard'
set -g @yank_selection_mouse 'clipboard'
set -g @yank_action 'copy-pipe-and-cancel'

# Mouse support with proper scrollback (disabled by default)
set -g mouse off

# Toggle mouse
unbind-key m ; bind-key m if-shell '[ "$(tmux show -gv mouse)" = "on" ]' 'set -g mouse off; display-message "Mouse: OFF"' 'set -g mouse on; display-message "Mouse: ON"'

# Natural mouse scrolling - no weird characters
bind-key -n WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -n WheelDownPane select-pane -t = \; send-keys -M

# In copy mode, scroll smoothly
bind-key -T copy-mode WheelUpPane send-keys -X -N 3 scroll-up
bind-key -T copy-mode WheelDownPane send-keys -X -N 3 scroll-down
bind-key -T copy-mode-vi WheelUpPane send-keys -X -N 3 scroll-up
bind-key -T copy-mode-vi WheelDownPane send-keys -X -N 3 scroll-down

# Disable mouse drag to prevent accidental copy mode
unbind-key -n MouseDrag1Pane

# Select layout
bind-key w command-prompt -p "tiled/even-horizontal/even-vertical/main-horizontal/main-vertical?"  "select-layout '%%'"

# Zoom tmux pane with '+' key
bind + resize-pane -Z

# Message display time (ms)
set-option -g display-time 2000

# Sync toggle
unbind-key s ; bind-key s set-window-option synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"

# Open prompt
unbind-key C-p ; bind C-p command-prompt -p "Command:" "run \"tmux list-panes -a -F '##{session_name}:##{window_index}.##{pane_index}' | xargs -I PANE tmux send-keys -t PANE '%1' Enter\""

# Notification
set-window-option -g monitor-activity on
set-option -g visual-activity on
set-option -g bell-action any
set-option -g visual-bell on

# Plugin properties
set -g @tilish-navigate 'on'
set -g @sidebar-tree 't'
set -g @sidebar-tree-focus 'T'
set -g @sidebar-tree-command 'tree -C'
set -g @sidebar-tree-position 'right'

# tmux-resurrect - per-session saves in dedicated directories
set -g @resurrect-dir '~/.local/share/tmux/resurrect/#S'
set -g @resurrect-save-shell-history 'on'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'

# tmux-continuum - auto-save every 15 minutes (but disable global restore)
set -g @continuum-restore 'off'
set -g @continuum-save-interval '15'
set -g @continuum-status-on 'yes'

## tmux prefix highlight with Dracula colors
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_show_sync_mode 'on'
set -g @prefix_highlight_prefix_prompt 'PRE'
set -g @prefix_highlight_copy_prompt 'COPY'
set -g @prefix_highlight_sync_prompt 'SYNC'
set -g @prefix_highlight_empty_prompt 'TMUX'
set -g @prefix_highlight_fg '#282a36'
set -g @prefix_highlight_bg '#50fa7b'
set -g @prefix_highlight_copy_mode_attr 'fg=#282a36,bg=#f1fa8c,bold'
set -g @prefix_highlight_sync_mode_attr 'fg=#282a36,bg=#ff5555,bold'
set -g @prefix_highlight_empty_attr 'fg=#f8f8f2,bg=#44475a'
set -g @prefix_highlight_empty_has_affixes 'on'
set -g @prefix_highlight_empty_prefix '['
set -g @prefix_highlight_empty_suffix ']'

# See: https://github.com/christoomey/vim-tmux-navigator
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Dracula theme status bar
set-option -g status on
set-option -g status-interval 2
set-option -g window-status-separator ''
set-option -g status-position "bottom"
set-option -g status-justify "centre"
set-option -g status-left-length 120
set-option -g status-right-length 120

# Status bar styling with Dracula colors
set-option -g status-style "fg=$color_fg,bg=$color_bg"
set-option -g pane-border-style "fg=$color_selection"
set-option -g pane-active-border-style "fg=$color_purple"

# Window status
set-window-option -g window-status-format "#[fg=$color_bg,bg=$color_comment] #I #[fg=$color_fg,bg=$color_selection] #W "
set-window-option -g window-status-current-format "#[fg=$color_bg,bg=$color_purple] #I #[fg=$color_fg,bg=$color_current,bold] #W "
set-window-option -g window-status-activity-style "fg=$color_yellow,bg=$color_bg"
set-window-option -g window-status-bell-style "fg=$color_red,bg=$color_bg"

# Status left and right
set -g status-left "#{prefix_highlight} #[fg=$color_comment]│ #[fg=$color_fg,bg=$color_selection] #S #[fg=$color_cyan,bg=$color_bg] #(whoami)@#H #[fg=$color_yellow]#{simple_git_status}"
set -g status-right "#[fg=$color_pink]#(weather simple 2>/dev/null) #[fg=$color_comment]│ #[fg=$color_orange]UP:#(uptime | cut -f 4-5 -d ' ' | cut -f 1 -d ',') #[fg=$color_comment]│ #[fg=$color_green]💾#{continuum_status} #[fg=$color_comment]│ #[fg=$color_cyan]%m/%d #[fg=$color_fg]%H:%M "

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
if "test ! -d ~/.local/share/tmux/plugins/default/tpm" "run 'git clone https://github.com/tmux-plugins/tpm ~/.local/share/tmux/plugins/default/tpm && ~/.local/share/tmux/plugins/default/tpm/bin/install_plugins'"
run '~/.local/share/tmux/plugins/default/tpm/tpm'

# import user config (after plugins are loaded)
if '[ -f TMUX_NEW_CONF_FILE_LOCAL ]' 'source TMUX_NEW_CONF_FILE_LOCAL'
